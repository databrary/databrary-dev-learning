src/Databrary/Model/Authorize.hs:51:7-59: Splicing expression
    selectQuery (selectAuthorizeParent 'child_aaiIK 'ident_aaiIM) "$"
  ======>
    fmap
      (\ (vsite_aar4N, vmember_aar4O, vexpires_aar4P, vid_aar4Q,
          vname_aar4R, vprename_aar4S, vorcid_aar4T, vaffiliation_aar4U,
          vurl_aar4V, vemail_aar4W)
         -> ($)
              (makeAuthorize
                 (Access vsite_aar4N vmember_aar4O) vexpires_aar4P child_aaiIK)
              (Databrary.Model.Party.SQL.permissionParty
                 (Databrary.Model.Party.SQL.makeParty
                    (PartyRow
                       vid_aar4Q
                       vname_aar4R
                       vprename_aar4S
                       vorcid_aar4T
                       vaffiliation_aar4U
                       vurl_aar4V)
                    (do { cm_aar4X <- vemail_aar4W;
                          Just (Account cm_aar4X) }))
                 Nothing
                 ident_aaiIM))
      ((\ _p_aar5M
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_aar5L
                  -> Database.PostgreSQL.Typed.Query.PreparedQuery
                       (Data.String.fromString
                          "SELECT authorize.site,authorize.member,authorize.expires,party.id,party.name,party.prename,party.orcid,party.affiliation,party.url,account.email FROM authorize JOIN party LEFT JOIN account USING (id) ON authorize.parent = party.id AND authorize.child = $1 ")
                       []
                       [Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aar5L
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aar5M]
                       [Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aar5L
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aar5L
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aar5L
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aar5L
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aar5L
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aar5L
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aar5L
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "bpchar"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aar5L
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aar5L
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aar5L
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying")])
               (\ _tenv_aar5L
                  [_csite_aar5N,
                   _cmember_aar5O,
                   _cexpires_aar5P,
                   _cid_aar5Q,
                   _cname_aar5R,
                   _cprename_aar5S,
                   _corcid_aar5T,
                   _caffiliation_aar5U,
                   _curl_aar5V,
                   _cemail_aar5W]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aar5L
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _csite_aar5N, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aar5L
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cmember_aar5O, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aar5L
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                        _cexpires_aar5P, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aar5L
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_aar5Q, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aar5L
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_aar5R, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aar5L
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cprename_aar5S, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aar5L
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "bpchar")
                        _corcid_aar5T, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aar5L
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _caffiliation_aar5U, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aar5L
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _curl_aar5V, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aar5L
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cemail_aar5W)))
         (partyId $ partyRow child))
src/Databrary/Model/Authorize.hs:52:14-197: Splicing expression
    selectQuery
      (selectAuthorizeParent 'child_aaiIK 'ident_aaiIM)
      "$WHERE (expires IS NULL OR expires > CURRENT_TIMESTAMP) AND site >= ${p} AND member >= ${p} AND (site <> 'NONE' OR member <> 'NONE')"
  ======>
    fmap
      (\ (vsite_aaAOy, vmember_aaAOz, vexpires_aaAOA, vid_aaAOB,
          vname_aaAOC, vprename_aaAOD, vorcid_aaAOE, vaffiliation_aaAOF,
          vurl_aaAOG, vemail_aaAOH)
         -> ($)
              (makeAuthorize
                 (Access vsite_aaAOy vmember_aaAOz) vexpires_aaAOA child_aaiIK)
              (Databrary.Model.Party.SQL.permissionParty
                 (Databrary.Model.Party.SQL.makeParty
                    (PartyRow
                       vid_aaAOB
                       vname_aaAOC
                       vprename_aaAOD
                       vorcid_aaAOE
                       vaffiliation_aaAOF
                       vurl_aaAOG)
                    (do { cm_aaAOI <- vemail_aaAOH;
                          Just (Account cm_aaAOI) }))
                 Nothing
                 ident_aaiIM))
      ((\ _p_aaAPp _p_aaAPq _p_aaAPr
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_aaAPo
                  -> Database.PostgreSQL.Typed.Query.PreparedQuery
                       (Data.String.fromString
                          "SELECT authorize.site,authorize.member,authorize.expires,party.id,party.name,party.prename,party.orcid,party.affiliation,party.url,account.email FROM authorize JOIN party LEFT JOIN account USING (id) ON authorize.parent = party.id AND authorize.child = $1 WHERE (expires IS NULL OR expires > CURRENT_TIMESTAMP) AND site >= $2 AND member >= $3 AND (site <> 'NONE' OR member <> 'NONE')")
                       []
                       [Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaAPo
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaAPp,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaAPo
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_aaAPq,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaAPo
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_aaAPr]
                       [Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAPo
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAPo
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAPo
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAPo
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAPo
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAPo
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAPo
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "bpchar"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAPo
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAPo
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAPo
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying")])
               (\ _tenv_aaAPo
                  [_csite_aaAPs,
                   _cmember_aaAPt,
                   _cexpires_aaAPu,
                   _cid_aaAPv,
                   _cname_aaAPw,
                   _cprename_aaAPx,
                   _corcid_aaAPy,
                   _caffiliation_aaAPz,
                   _curl_aaAPA,
                   _cemail_aaAPB]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAPo
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _csite_aaAPs, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAPo
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cmember_aaAPt, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAPo
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                        _cexpires_aaAPu, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAPo
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_aaAPv, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAPo
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_aaAPw, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAPo
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cprename_aaAPx, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAPo
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "bpchar")
                        _corcid_aaAPy, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAPo
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _caffiliation_aaAPz, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAPo
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _curl_aaAPA, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAPo
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cemail_aaAPB)))
         (partyId $ partyRow child) p p)
src/Databrary/Model/Authorize.hs:62:7-59: Splicing expression
    selectQuery (selectAuthorizeChild 'parent_aaAPL 'ident_aaAPN) "$"
  ======>
    fmap
      (\ (vsite_aaAQi, vmember_aaAQj, vexpires_aaAQk, vid_aaAQl,
          vname_aaAQm, vprename_aaAQn, vorcid_aaAQo, vaffiliation_aaAQp,
          vurl_aaAQq, vemail_aaAQr)
         -> ($)
              (makeAuthorize (Access vsite_aaAQi vmember_aaAQj) vexpires_aaAQk)
              (Databrary.Model.Party.SQL.permissionParty
                 (Databrary.Model.Party.SQL.makeParty
                    (PartyRow
                       vid_aaAQl
                       vname_aaAQm
                       vprename_aaAQn
                       vorcid_aaAQo
                       vaffiliation_aaAQp
                       vurl_aaAQq)
                    (do { cm_aaAQs <- vemail_aaAQr;
                          Just (Account cm_aaAQs) }))
                 Nothing
                 ident_aaAPN)
              parent_aaAPL)
      ((\ _p_aaAR3
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_aaAR2
                  -> Database.PostgreSQL.Typed.Query.PreparedQuery
                       (Data.String.fromString
                          "SELECT authorize.site,authorize.member,authorize.expires,party.id,party.name,party.prename,party.orcid,party.affiliation,party.url,account.email FROM authorize JOIN party LEFT JOIN account USING (id) ON authorize.child = party.id AND authorize.parent = $1 ")
                       []
                       [Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaAR2
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaAR3]
                       [Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAR2
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAR2
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAR2
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAR2
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAR2
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAR2
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAR2
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "bpchar"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAR2
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAR2
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAR2
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying")])
               (\ _tenv_aaAR2
                  [_csite_aaAR4,
                   _cmember_aaAR5,
                   _cexpires_aaAR6,
                   _cid_aaAR7,
                   _cname_aaAR8,
                   _cprename_aaAR9,
                   _corcid_aaARa,
                   _caffiliation_aaARb,
                   _curl_aaARc,
                   _cemail_aaARd]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAR2
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _csite_aaAR4, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAR2
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cmember_aaAR5, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAR2
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                        _cexpires_aaAR6, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAR2
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_aaAR7, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAR2
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_aaAR8, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAR2
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cprename_aaAR9, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAR2
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "bpchar")
                        _corcid_aaARa, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAR2
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _caffiliation_aaARb, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAR2
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _curl_aaARc, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAR2
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cemail_aaARd)))
         (partyId $ partyRow parent))
src/Databrary/Model/Authorize.hs:63:14-197: Splicing expression
    selectQuery
      (selectAuthorizeChild 'parent_aaAPL 'ident_aaAPN)
      "$WHERE (expires IS NULL OR expires > CURRENT_TIMESTAMP) AND site >= ${p} AND member >= ${p} AND (site <> 'NONE' OR member <> 'NONE')"
  ======>
    fmap
      (\ (vsite_aaASK, vmember_aaASL, vexpires_aaASM, vid_aaASN,
          vname_aaASO, vprename_aaASP, vorcid_aaASQ, vaffiliation_aaASR,
          vurl_aaASS, vemail_aaAST)
         -> ($)
              (makeAuthorize (Access vsite_aaASK vmember_aaASL) vexpires_aaASM)
              (Databrary.Model.Party.SQL.permissionParty
                 (Databrary.Model.Party.SQL.makeParty
                    (PartyRow
                       vid_aaASN
                       vname_aaASO
                       vprename_aaASP
                       vorcid_aaASQ
                       vaffiliation_aaASR
                       vurl_aaASS)
                    (do { cm_aaASU <- vemail_aaAST;
                          Just (Account cm_aaASU) }))
                 Nothing
                 ident_aaAPN)
              parent_aaAPL)
      ((\ _p_aaATB _p_aaATC _p_aaATD
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_aaATA
                  -> Database.PostgreSQL.Typed.Query.PreparedQuery
                       (Data.String.fromString
                          "SELECT authorize.site,authorize.member,authorize.expires,party.id,party.name,party.prename,party.orcid,party.affiliation,party.url,account.email FROM authorize JOIN party LEFT JOIN account USING (id) ON authorize.child = party.id AND authorize.parent = $1 WHERE (expires IS NULL OR expires > CURRENT_TIMESTAMP) AND site >= $2 AND member >= $3 AND (site <> 'NONE' OR member <> 'NONE')")
                       []
                       [Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaATA
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaATB,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaATA
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_aaATC,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaATA
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_aaATD]
                       [Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaATA
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaATA
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaATA
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaATA
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaATA
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaATA
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaATA
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "bpchar"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaATA
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaATA
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaATA
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying")])
               (\ _tenv_aaATA
                  [_csite_aaATE,
                   _cmember_aaATF,
                   _cexpires_aaATG,
                   _cid_aaATH,
                   _cname_aaATI,
                   _cprename_aaATJ,
                   _corcid_aaATK,
                   _caffiliation_aaATL,
                   _curl_aaATM,
                   _cemail_aaATN]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaATA
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _csite_aaATE, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaATA
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cmember_aaATF, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaATA
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                        _cexpires_aaATG, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaATA
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_aaATH, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaATA
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_aaATI, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaATA
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cprename_aaATJ, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaATA
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "bpchar")
                        _corcid_aaATK, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaATA
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _caffiliation_aaATL, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaATA
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _curl_aaATM, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaATA
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cemail_aaATN)))
         (partyId $ partyRow parent) p p)
src/Databrary/Model/Authorize.hs:(77,25)-(79,187): Splicing expression
    selectQuery
      authorizeRow
      "$WHERE authorize.child = ${partyId $ partyRow child} AND authorize.parent = ${partyId $ partyRow parent} AND (expires IS NULL OR expires > CURRENT_TIMESTAMP)"
  ======>
    fmap
      (\ (vsite_aaAUw, vmember_aaAUx, vexpires_aaAUy)
         -> makeAuthorize (Access vsite_aaAUw vmember_aaAUx) vexpires_aaAUy)
      ((\ _p_aaAUR _p_aaAUS
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_aaAUQ
                  -> Database.PostgreSQL.Typed.Query.PreparedQuery
                       (Data.String.fromString
                          "SELECT authorize.site,authorize.member,authorize.expires FROM authorize WHERE authorize.child = $1 AND authorize.parent = $2 AND (expires IS NULL OR expires > CURRENT_TIMESTAMP)")
                       []
                       [Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaAUQ
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaAUR,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaAUQ
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaAUS]
                       [Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAUQ
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAUQ
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAUQ
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")])
               (\ _tenv_aaAUQ [_csite_aaAUT, _cmember_aaAUU, _cexpires_aaAUV]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAUQ
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _csite_aaAUT, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAUQ
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cmember_aaAUU, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAUQ
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                        _cexpires_aaAUV)))
         (partyId $ partyRow child) (partyId $ partyRow parent))
src/Databrary/Model/Authorize.hs:(81,25)-(83,134): Splicing expression
    selectQuery
      authorizeRow
      "$WHERE authorize.child = ${partyId $ partyRow child} AND authorize.parent = ${partyId $ partyRow parent}"
  ======>
    fmap
      (\ (vsite_aaAWA, vmember_aaAWB, vexpires_aaAWC)
         -> makeAuthorize (Access vsite_aaAWA vmember_aaAWB) vexpires_aaAWC)
      ((\ _p_aaB20 _p_aaB21
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_aaB1Z
                  -> Database.PostgreSQL.Typed.Query.PreparedQuery
                       (Data.String.fromString
                          "SELECT authorize.site,authorize.member,authorize.expires FROM authorize WHERE authorize.child = $1 AND authorize.parent = $2")
                       []
                       [Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaB1Z
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaB20,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaB1Z
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaB21]
                       [Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaB1Z
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaB1Z
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaB1Z
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")])
               (\ _tenv_aaB1Z [_csite_aaB23, _cmember_aaB25, _cexpires_aaB26]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaB1Z
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _csite_aaB23, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaB1Z
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cmember_aaB25, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaB1Z
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                        _cexpires_aaB26)))
         (partyId $ partyRow child) (partyId $ partyRow parent))
src/Databrary/Model/Authorize.hs:89:16-155: Splicing expression
    selectQuery
      (selectAuthorizeParent 'child_aaB3a 'ident_aaB3d)
      "$WHERE authorize.parent = ${parent} AND (expires IS NULL OR expires > CURRENT_TIMESTAMP)"
  ======>
    fmap
      (\ (vsite_aaB4D, vmember_aaB4E, vexpires_aaB4F, vid_aaB4G,
          vname_aaB4H, vprename_aaB4I, vorcid_aaB4J, vaffiliation_aaB4K,
          vurl_aaB4L, vemail_aaB4M)
         -> ($)
              (makeAuthorize
                 (Access vsite_aaB4D vmember_aaB4E) vexpires_aaB4F child_aaB3a)
              (Databrary.Model.Party.SQL.permissionParty
                 (Databrary.Model.Party.SQL.makeParty
                    (PartyRow
                       vid_aaB4G
                       vname_aaB4H
                       vprename_aaB4I
                       vorcid_aaB4J
                       vaffiliation_aaB4K
                       vurl_aaB4L)
                    (do { cm_aaB4N <- vemail_aaB4M;
                          Just (Account cm_aaB4N) }))
                 Nothing
                 ident_aaB3d))
      ((\ _p_aaB6f _p_aaB6g
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_aaB6d
                  -> Database.PostgreSQL.Typed.Query.PreparedQuery
                       (Data.String.fromString
                          "SELECT authorize.site,authorize.member,authorize.expires,party.id,party.name,party.prename,party.orcid,party.affiliation,party.url,account.email FROM authorize JOIN party LEFT JOIN account USING (id) ON authorize.parent = party.id AND authorize.child = $1 WHERE authorize.parent = $2 AND (expires IS NULL OR expires > CURRENT_TIMESTAMP)")
                       []
                       [Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaB6d
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaB6f,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaB6d
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaB6g]
                       [Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaB6d
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaB6d
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaB6d
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaB6d
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaB6d
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaB6d
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaB6d
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "bpchar"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaB6d
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaB6d
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaB6d
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying")])
               (\ _tenv_aaB6d
                  [_csite_aaB6h,
                   _cmember_aaB6i,
                   _cexpires_aaB6k,
                   _cid_aaB6l,
                   _cname_aaB6m,
                   _cprename_aaB6o,
                   _corcid_aaB6p,
                   _caffiliation_aaB6q,
                   _curl_aaB6r,
                   _cemail_aaB6s]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaB6d
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _csite_aaB6h, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaB6d
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cmember_aaB6i, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaB6d
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                        _cexpires_aaB6k, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaB6d
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_aaB6l, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaB6d
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_aaB6m, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaB6d
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cprename_aaB6o, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaB6d
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "bpchar")
                        _corcid_aaB6p, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaB6d
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _caffiliation_aaB6q, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaB6d
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _curl_aaB6r, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaB6d
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cemail_aaB6s)))
         (partyId $ partyRow child) parent)
src/Databrary/Model/Authorize.hs:101:48-193: Splicing expression
    selectQuery
      authorizationRow
      "!$WHERE authorize_view.child = ${partyId $ partyRow child} AND authorize_view.parent = ${partyId $ partyRow parent}"
  ======>
    fmap
      (\ (vsite_aaBhM, vmember_aaBhN)
         -> Authorization (Access vsite_aaBhM vmember_aaBhN))
      ((\ _p_aaBiI _p_aaBiJ
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_aaBiH
                  -> Database.PostgreSQL.Typed.Query.PreparedQuery
                       (Data.String.fromString
                          "SELECT authorize_view.site,authorize_view.member FROM authorize_view WHERE authorize_view.child = $1 AND authorize_view.parent = $2")
                       []
                       [Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaBiH
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaBiI,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaBiH
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaBiJ]
                       [Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBiH
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBiH
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")])
               (\ _tenv_aaBiH [_csite_aaBiK, _cmember_aaBiL]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaBiH
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _csite_aaBiK, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaBiH
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cmember_aaBiL)))
         (partyId $ partyRow child) (partyId $ partyRow parent))
src/Databrary/Model/Authorize.hs:109:7-34: Splicing expression
    updateAuthorize 'ident_aaBmc 'auth_aaBlZ
  ======>
    (\ _p_aaBoE _p_aaBoF _p_aaBoG _p_aaBoH _p_aaBoI _p_aaBoJ _p_aaBoK
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_aaBoD
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString
                          "WITH audit_row AS (UPDATE authorize SET site=",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBoD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_aaBoE,
                        Data.String.fromString ",member=",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBoD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_aaBoF,
                        Data.String.fromString ",expires=",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBoD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                          _p_aaBoG,
                        Data.String.fromString " WHERE child=",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBoD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaBoH,
                        Data.String.fromString " AND parent=",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBoD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaBoI,
                        Data.String.fromString
                          " RETURNING *) INSERT INTO audit.authorize SELECT CURRENT_TIMESTAMP, ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBoD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaBoJ,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBoD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "inet")
                          _p_aaBoK,
                        Data.String.fromString
                          ", 'change'::audit.action, * FROM audit_row"]))
            (\ _tenv_aaBoD [] -> ()))
      (accessSite auth)
      (accessMember auth)
      (authorizeExpires auth)
      (partyId $ partyRow $ authorizeChild $ authorization auth)
      (partyId $ partyRow $ authorizeParent $ authorization auth)
      (auditWho ident)
      (auditIp ident)
src/Databrary/Model/Authorize.hs:110:7-34: Splicing expression
    insertAuthorize 'ident_aaBmc 'auth_aaBlZ
  ======>
    (\ _p_aaBvx _p_aaBvy _p_aaBvz _p_aaBvA _p_aaBvB _p_aaBvC _p_aaBvD
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_aaBvw
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString
                          "WITH audit_row AS (INSERT INTO authorize (child,parent,site,member,expires) VALUES (",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBvw
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaBvx,
                        Data.String.fromString ",",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBvw
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaBvy,
                        Data.String.fromString ",",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBvw
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_aaBvz,
                        Data.String.fromString ",",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBvw
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_aaBvA,
                        Data.String.fromString ",",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBvw
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                          _p_aaBvB,
                        Data.String.fromString
                          ") RETURNING *) INSERT INTO audit.authorize SELECT CURRENT_TIMESTAMP, ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBvw
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaBvC,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBvw
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "inet")
                          _p_aaBvD,
                        Data.String.fromString ", 'add'::audit.action, * FROM audit_row"]))
            (\ _tenv_aaBvw [] -> ()))
      (partyId $ partyRow $ authorizeChild $ authorization auth)
      (partyId $ partyRow $ authorizeParent $ authorization auth)
      (accessSite auth)
      (accessMember auth)
      (authorizeExpires auth)
      (auditWho ident)
      (auditIp ident)
src/Databrary/Model/Authorize.hs:116:16-43: Splicing expression
    deleteAuthorize 'ident_aaBzJ 'auth_aaBzE
  ======>
    (\ _p_aaBCl _p_aaBCm _p_aaBCn _p_aaBCo
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_aaBCk
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString
                          "WITH audit_row AS (DELETE FROM authorize WHERE child=",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBCk
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaBCl,
                        Data.String.fromString " AND parent=",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBCk
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaBCm,
                        Data.String.fromString
                          " RETURNING *) INSERT INTO audit.authorize SELECT CURRENT_TIMESTAMP, ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBCk
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaBCn,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaBCk
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "inet")
                          _p_aaBCo,
                        Data.String.fromString
                          ", 'remove'::audit.action, * FROM audit_row"]))
            (\ _tenv_aaBCk [] -> ()))
      (partyId $ partyRow $ authorizeChild $ authorization auth)
      (partyId $ partyRow $ authorizeParent $ authorization auth)
      (auditWho ident)
      (auditIp ident)
src/Databrary/Model/Authorize.hs:135:13-319: Splicing expression
    selectQuery
      (selectAuthorizeActivity 'ident_aaBFY)
      "$JOIN authorize_view ON audit.parent = authorize_view.child AND authorize_view.parent = 0 WHERE audit.audit_action IN ('add','change') AND audit.site >= 'EDIT' AND authorize_view.site > 'EDIT' ORDER BY audit.audit_time DESC LIMIT ${fromIntegral limit :: Int64}"
  ======>
    fmap
      (\ (vtime_aaBHO, vid_aaBHP, vname_aaBHQ, vprename_aaBHR,
          vorcid_aaBHS, vaffiliation_aaBHT, vurl_aaBHV, vemail_aaBHW)
         -> ghc-prim-0.5.0.0:GHC.Tuple.(,)
              vtime_aaBHO
              (Databrary.Model.Party.SQL.permissionParty
                 (Databrary.Model.Party.SQL.makeParty
                    (PartyRow
                       vid_aaBHP
                       vname_aaBHQ
                       vprename_aaBHR
                       vorcid_aaBHS
                       vaffiliation_aaBHT
                       vurl_aaBHV)
                    (do { cm_aaBIj <- vemail_aaBHW;
                          Just (Account cm_aaBIj) }))
                 Nothing
                 ident_aaBFY))
      ((\ _p_aaBJ9
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_aaBJ8
                  -> Database.PostgreSQL.Typed.Query.PreparedQuery
                       (Data.String.fromString
                          "SELECT audit.audit_time,party.id,party.name,party.prename,party.orcid,party.affiliation,party.url,account.email FROM audit.authorize AS audit JOIN party LEFT JOIN account USING (id) ON audit.child = party.id JOIN authorize_view ON audit.parent = authorize_view.child AND authorize_view.parent = 0 WHERE audit.audit_action IN ('add','change') AND audit.site >= 'EDIT' AND authorize_view.site > 'EDIT' ORDER BY audit.audit_time DESC LIMIT $1")
                       []
                       [Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaBJ8
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "bigint")
                          _p_aaBJ9]
                       [Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBJ8
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBJ8
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBJ8
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBJ8
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBJ8
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "bpchar"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBJ8
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBJ8
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBJ8
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying")])
               (\ _tenv_aaBJ8
                  [_caudit_time_aaBJa,
                   _cid_aaBJb,
                   _cname_aaBJc,
                   _cprename_aaBJd,
                   _corcid_aaBJe,
                   _caffiliation_aaBJf,
                   _curl_aaBJg,
                   _cemail_aaBJh]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaBJ8
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                        _caudit_time_aaBJa, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaBJ8
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_aaBJb, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaBJ8
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_aaBJc, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaBJ8
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cprename_aaBJd, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaBJ8
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "bpchar")
                        _corcid_aaBJe, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaBJ8
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _caffiliation_aaBJf, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaBJ8
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _curl_aaBJg, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaBJ8
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cemail_aaBJh)))
         (fromIntegral limit :: Int64))
