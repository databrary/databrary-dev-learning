src/Databrary/Model/Metric/Types.hs:116:1-40: Splicing declarations
    deriveLiftMany [''MeasureType, ''Metric]
  ======>
    instance Language.Haskell.TH.Syntax.Lift MeasureType where
      Language.Haskell.TH.Syntax.lift
        = \ e_a5tDX
            -> case e_a5tDX of {
                 MeasureTypeText
                   -> Language.Haskell.TH.Lib.conE
                        (Language.Haskell.TH.Syntax.Name
                           (Language.Haskell.TH.Syntax.mkOccName "MeasureTypeText")
                           (Language.Haskell.TH.Syntax.NameG
                              Language.Haskell.TH.Syntax.DataName
                              (Language.Haskell.TH.Syntax.mkPkgName
                                 "databrary-1-CKdn4uB613l7rh0y53TmMA")
                              (Language.Haskell.TH.Syntax.mkModName
                                 "Databrary.Model.Metric.Types")))
                 MeasureTypeNumeric
                   -> Language.Haskell.TH.Lib.conE
                        (Language.Haskell.TH.Syntax.Name
                           (Language.Haskell.TH.Syntax.mkOccName "MeasureTypeNumeric")
                           (Language.Haskell.TH.Syntax.NameG
                              Language.Haskell.TH.Syntax.DataName
                              (Language.Haskell.TH.Syntax.mkPkgName
                                 "databrary-1-CKdn4uB613l7rh0y53TmMA")
                              (Language.Haskell.TH.Syntax.mkModName
                                 "Databrary.Model.Metric.Types")))
                 MeasureTypeDate
                   -> Language.Haskell.TH.Lib.conE
                        (Language.Haskell.TH.Syntax.Name
                           (Language.Haskell.TH.Syntax.mkOccName "MeasureTypeDate")
                           (Language.Haskell.TH.Syntax.NameG
                              Language.Haskell.TH.Syntax.DataName
                              (Language.Haskell.TH.Syntax.mkPkgName
                                 "databrary-1-CKdn4uB613l7rh0y53TmMA")
                              (Language.Haskell.TH.Syntax.mkModName
                                 "Databrary.Model.Metric.Types")))
                 MeasureTypeVoid
                   -> Language.Haskell.TH.Lib.conE
                        (Language.Haskell.TH.Syntax.Name
                           (Language.Haskell.TH.Syntax.mkOccName "MeasureTypeVoid")
                           (Language.Haskell.TH.Syntax.NameG
                              Language.Haskell.TH.Syntax.DataName
                              (Language.Haskell.TH.Syntax.mkPkgName
                                 "databrary-1-CKdn4uB613l7rh0y53TmMA")
                              (Language.Haskell.TH.Syntax.mkModName
                                 "Databrary.Model.Metric.Types"))) }
    instance Language.Haskell.TH.Syntax.Lift Metric where
      Language.Haskell.TH.Syntax.lift
        = \ e_a5tDZ
            -> case e_a5tDZ of {
                 Metric x0_a5tE0
                        x1_a5tE1
                        x2_a5tE2
                        x3_a5tE3
                        x4_a5tE4
                        x5_a5tE5
                        x6_a5tE6
                        x7_a5tE7
                        x8_a5tE8
                   -> Language.Haskell.TH.Lib.appE
                        (Language.Haskell.TH.Lib.appE
                           (Language.Haskell.TH.Lib.appE
                              (Language.Haskell.TH.Lib.appE
                                 (Language.Haskell.TH.Lib.appE
                                    (Language.Haskell.TH.Lib.appE
                                       (Language.Haskell.TH.Lib.appE
                                          (Language.Haskell.TH.Lib.appE
                                             (Language.Haskell.TH.Lib.appE
                                                (Language.Haskell.TH.Lib.conE
                                                   (Language.Haskell.TH.Syntax.Name
                                                      (Language.Haskell.TH.Syntax.mkOccName
                                                         "Metric")
                                                      (Language.Haskell.TH.Syntax.NameG
                                                         Language.Haskell.TH.Syntax.DataName
                                                         (Language.Haskell.TH.Syntax.mkPkgName
                                                            "databrary-1-CKdn4uB613l7rh0y53TmMA")
                                                         (Language.Haskell.TH.Syntax.mkModName
                                                            "Databrary.Model.Metric.Types"))))
                                                (Language.Haskell.TH.Syntax.lift x0_a5tE0))
                                             (Language.Haskell.TH.Syntax.lift x1_a5tE1))
                                          (Language.Haskell.TH.Syntax.lift x2_a5tE2))
                                       (Language.Haskell.TH.Syntax.lift x3_a5tE3))
                                    (Language.Haskell.TH.Syntax.lift x4_a5tE4))
                                 (Language.Haskell.TH.Syntax.lift x5_a5tE5))
                              (Language.Haskell.TH.Syntax.lift x6_a5tE6))
                           (Language.Haskell.TH.Syntax.lift x7_a5tE7))
                        (Language.Haskell.TH.Syntax.lift x8_a5tE8) }
