Databrary/Model/Audit/Types.hs:16:1-39: Splicing declarations
    makeDBEnum "audit.action" "AuditAction"
  ======>
    data AuditAction
      = AuditActionAttempt |
        AuditActionOpen |
        AuditActionClose |
        AuditActionAdd |
        AuditActionChange |
        AuditActionRemove |
        AuditActionSuperuser
      deriving (Eq,
                Ord,
                Enum,
                GHC.Arr.Ix,
                Bounded,
                Data.Typeable.Internal.Typeable)
    instance Show AuditAction where
      show AuditActionAttempt = "attempt"
      show AuditActionOpen = "open"
      show AuditActionClose = "close"
      show AuditActionAdd = "add"
      show AuditActionChange = "change"
      show AuditActionRemove = "remove"
      show AuditActionSuperuser = "superuser"
    instance Database.PostgreSQL.Typed.Types.PGType "audit.action"
    instance Database.PostgreSQL.Typed.Types.PGParameter "audit.action" AuditAction where
      Database.PostgreSQL.Typed.Types.pgEncode _ AuditActionAttempt
        = Data.ByteString.pack [97, 116, 116, 101, 109, 112, 116]
      Database.PostgreSQL.Typed.Types.pgEncode _ AuditActionOpen
        = Data.ByteString.pack [111, 112, 101, 110]
      Database.PostgreSQL.Typed.Types.pgEncode _ AuditActionClose
        = Data.ByteString.pack [99, 108, 111, 115, 101]
      Database.PostgreSQL.Typed.Types.pgEncode _ AuditActionAdd
        = Data.ByteString.pack [97, 100, 100]
      Database.PostgreSQL.Typed.Types.pgEncode _ AuditActionChange
        = Data.ByteString.pack [99, 104, 97, 110, 103, 101]
      Database.PostgreSQL.Typed.Types.pgEncode _ AuditActionRemove
        = Data.ByteString.pack [114, 101, 109, 111, 118, 101]
      Database.PostgreSQL.Typed.Types.pgEncode _ AuditActionSuperuser
        = Data.ByteString.pack
            [115, 117, 112, 101, 114, 117, 115, 101, 114]
    instance Database.PostgreSQL.Typed.Types.PGColumn "audit.action" AuditAction where
      Database.PostgreSQL.Typed.Types.pgDecode _ x_a4NXQ
        = case Data.ByteString.unpack x_a4NXQ of {
            [97, 116, 116, 101, 109, 112, 116] -> AuditActionAttempt
            [111, 112, 101, 110] -> AuditActionOpen
            [99, 108, 111, 115, 101] -> AuditActionClose
            [97, 100, 100] -> AuditActionAdd
            [99, 104, 97, 110, 103, 101] -> AuditActionChange
            [114, 101, 109, 111, 118, 101] -> AuditActionRemove
            [115, 117, 112, 101, 114, 117, 115, 101, 114]
              -> AuditActionSuperuser
            _ -> error
                   ("pgDecode audit.action: "
                    ++ (Data.ByteString.Char8.unpack x_a4NXQ)) }
    instance Database.PostgreSQL.Typed.Dynamic.PGRep "audit.action" AuditAction
    instance Database.PostgreSQL.Typed.Enum.PGEnum AuditAction
    instance Databrary.Model.Kind.Kinded AuditAction where
      Databrary.Model.Kind.kindOf _ = "audit.action"
    instance DBEnum AuditAction
    instance aeson-1.2.2.0:Data.Aeson.Types.ToJSON.ToJSON AuditAction where
      aeson-1.2.2.0:Data.Aeson.Types.ToJSON.toJSON
        = (aeson-1.2.2.0:Data.Aeson.Types.ToJSON.toJSON . fromEnum)
    instance aeson-1.2.2.0:Data.Aeson.Types.FromJSON.FromJSON AuditAction where
      aeson-1.2.2.0:Data.Aeson.Types.FromJSON.parseJSON = parseJSONEnum
    instance Databrary.HTTP.Form.Deform.Deform f_a4NXR AuditAction where
      Databrary.HTTP.Form.Deform.deform = enumForm
