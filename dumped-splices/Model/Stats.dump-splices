Databrary/Model/Stats.hs:16:1-6: Splicing declarations
    useTDB ======>
Databrary/Model/Stats.hs:20:24-115: Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      pgSQL
      "SELECT site, count(child) FROM authorize_view WHERE parent = 0 AND child > 4 GROUP BY site"
  ======>
    \ -> Database.PostgreSQL.Typed.Query.QueryParser
           (\ _tenv_a4HL5
              -> Database.PostgreSQL.Typed.Query.SimpleQuery
                   (Data.ByteString.concat
                      [Data.String.fromString
                         "SELECT site, count(child) FROM authorize_view WHERE parent = 0 AND child > 4 GROUP BY site"]))
           (\ _tenv_a4HL5 [_csite_a4HL6, _ccount_a4HL7]
              -> (Database.PostgreSQL.Typed.Types.pgDecodeColumn
                    _tenv_a4HL5
                    (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                       Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                    _csite_a4HL6, 
                  Database.PostgreSQL.Typed.Types.pgDecodeColumn
                    _tenv_a4HL5
                    (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                       Database.PostgreSQL.Typed.Types.PGTypeName "bigint")
                    _ccount_a4HL7))
Databrary/Model/Stats.hs:21:25-67: Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      pgSQL "SELECT count(id) FROM volume WHERE id > 0"
  ======>
    \ -> Database.PostgreSQL.Typed.Query.QueryParser
           (\ _tenv_a4HPN
              -> Database.PostgreSQL.Typed.Query.SimpleQuery
                   (Data.ByteString.concat
                      [Data.String.fromString
                         "SELECT count(id) FROM volume WHERE id > 0"]))
           (\ _tenv_a4HPN [_ccount_a4HPR]
              -> (Database.PostgreSQL.Typed.Types.pgDecodeColumn
                    _tenv_a4HPN
                    (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                       Database.PostgreSQL.Typed.Types.PGTypeName "bigint")
                    _ccount_a4HPR))
Databrary/Model/Stats.hs:22:26-122: Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      pgSQL
      "SELECT count(volume) FROM volume_access WHERE volume > 0 AND party = 0 AND children >= 'PUBLIC'"
  ======>
    \ -> Database.PostgreSQL.Typed.Query.QueryParser
           (\ _tenv_a4HWw
              -> Database.PostgreSQL.Typed.Query.SimpleQuery
                   (Data.ByteString.concat
                      [Data.String.fromString
                         "SELECT count(volume) FROM volume_access WHERE volume > 0 AND party = 0 AND children >= 'PUBLIC'"]))
           (\ _tenv_a4HWw [_ccount_a4HWx]
              -> (Database.PostgreSQL.Typed.Types.pgDecodeColumn
                    _tenv_a4HWw
                    (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                       Database.PostgreSQL.Typed.Types.PGTypeName "bigint")
                    _ccount_a4HWx))
Databrary/Model/Stats.hs:23:35-136: Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      pgSQL
      "SELECT count(id), sum(duration), sum(size) FROM asset JOIN slot_asset ON asset = id WHERE volume > 0"
  ======>
    \ -> Database.PostgreSQL.Typed.Query.QueryParser
           (\ _tenv_a4HYm
              -> Database.PostgreSQL.Typed.Query.SimpleQuery
                   (Data.ByteString.concat
                      [Data.String.fromString
                         "SELECT count(id), sum(duration), sum(size) FROM asset JOIN slot_asset ON asset = id WHERE volume > 0"]))
           (\ _tenv_a4HYm [_ccount_a4HYn, _csum_a4HYo, _csum_a4HYp]
              -> (Database.PostgreSQL.Typed.Types.pgDecodeColumn
                    _tenv_a4HYm
                    (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                       Database.PostgreSQL.Typed.Types.PGTypeName "bigint")
                    _ccount_a4HYn, 
                  Database.PostgreSQL.Typed.Types.pgDecodeColumn
                    _tenv_a4HYm
                    (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                       Database.PostgreSQL.Typed.Types.PGTypeName "interval")
                    _csum_a4HYo, 
                  Database.PostgreSQL.Typed.Types.pgDecodeColumn
                    _tenv_a4HYm
                    (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                       Database.PostgreSQL.Typed.Types.PGTypeName "numeric")
                    _csum_a4HYp))
Databrary/Model/Stats.hs:24:24-99: Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      pgSQL
      "SELECT category, count(id) FROM record GROUP BY category ORDER BY category"
  ======>
    \ -> Database.PostgreSQL.Typed.Query.QueryParser
           (\ _tenv_a4I0g
              -> Database.PostgreSQL.Typed.Query.SimpleQuery
                   (Data.ByteString.concat
                      [Data.String.fromString
                         "SELECT category, count(id) FROM record GROUP BY category ORDER BY category"]))
           (\ _tenv_a4I0g [_ccategory_a4I0h, _ccount_a4I0i]
              -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                    _tenv_a4I0g
                    (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                       Database.PostgreSQL.Typed.Types.PGTypeName "smallint")
                    _ccategory_a4I0h, 
                  Database.PostgreSQL.Typed.Types.pgDecodeColumn
                    _tenv_a4I0g
                    (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                       Database.PostgreSQL.Typed.Types.PGTypeName "bigint")
                    _ccount_a4I0i))
