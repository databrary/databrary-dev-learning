src/Model/Citation.hs:30:59-151: Splicing expression
    selectQuery
      selectVolumeCitation
      "WHERE volume_citation.volume = ${volumeId $ volumeRow vol}"
  ======>
    fmap
      (\ (vhead_a1hHk, vurl_a1hHl, vyear_a1hHm)
         -> Citation vhead_a1hHk vurl_a1hHl vyear_a1hHm)
      ((\ _p_a1hUc
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_a1hUa
                  -> Database.PostgreSQL.Typed.Query.SimpleQuery
                       (Data.ByteString.concat
                          [Data.String.fromString
                             "SELECT volume_citation.head,volume_citation.url,volume_citation.year FROM volume_citation WHERE volume_citation.volume = ",
                           pgEscapeParameter
                             _tenv_a1hUa (PGTypeProxy :: PGTypeName "integer") _p_a1hUc]))
               (\ _tenv_a1hUa [_chead_a1hUd, _curl_a1hUe, _cyear_a1hUf]
                  -> (pgDecodeColumnNotNull
                        _tenv_a1hUa (PGTypeProxy :: PGTypeName "text") _chead_a1hUd, 
                      pgDecodeColumn
                        _tenv_a1hUa (PGTypeProxy :: PGTypeName "text") _curl_a1hUe, 
                      pgDecodeColumn
                        _tenv_a1hUa (PGTypeProxy :: PGTypeName "smallint") _cyear_a1hUf)))
         (volumeId $ volumeRow vol))
src/Model/Citation.hs:165:13-97: Splicing expression
    selectQuery
      selectVolumeLink
      "WHERE volume_link.volume = ${volumeId $ volumeRow vol}"
  ======>
    fmap
      (\ (vhead_a1i73, vurl_a1i74)
         -> Citation vhead_a1i73 vurl_a1i74 Nothing Nothing)
      ((\ _p_a1i7j
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_a1i7i
                  -> Database.PostgreSQL.Typed.Query.SimpleQuery
                       (Data.ByteString.concat
                          [Data.String.fromString
                             "SELECT volume_link.head,volume_link.url FROM volume_link WHERE volume_link.volume = ",
                           pgEscapeParameter
                             _tenv_a1i7i (PGTypeProxy :: PGTypeName "integer") _p_a1i7j]))
               (\ _tenv_a1i7i [_chead_a1i7k, _curl_a1i7l]
                  -> (pgDecodeColumnNotNull
                        _tenv_a1i7i (PGTypeProxy :: PGTypeName "text") _chead_a1i7k, 
                      pgDecodeColumnNotNull
                        _tenv_a1i7i (PGTypeProxy :: PGTypeName "text") _curl_a1i7l)))
         (volumeId $ volumeRow vol))
src/Model/Citation.hs:171:18-49: Splicing expression
    deleteVolumeCitation 'ident_a1i7D 'vol_a1i7B
  ======>
    (\ _p_a1i81 _p_a1i82 _p_a1i83
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_a1i80
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString
                          "WITH audit_row AS (DELETE FROM volume_citation WHERE volume=",
                        pgEscapeParameter
                          _tenv_a1i80 (PGTypeProxy :: PGTypeName "integer") _p_a1i81,
                        Data.String.fromString
                          " RETURNING *) INSERT INTO audit.volume_citation SELECT CURRENT_TIMESTAMP, ",
                        pgEscapeParameter
                          _tenv_a1i80 (PGTypeProxy :: PGTypeName "integer") _p_a1i82,
                        Data.String.fromString ", ",
                        pgEscapeParameter
                          _tenv_a1i80 (PGTypeProxy :: PGTypeName "inet") _p_a1i83,
                        Data.String.fromString
                          ", 'remove'::audit.action, * FROM audit_row"]))
            (\ _tenv_a1i80 [] -> ()))
      (volumeId $ volumeRow vol) (auditWho ident) (auditIp ident)
src/Model/Citation.hs:173:9-46: Splicing expression
    updateVolumeCitation 'ident_a1i7D 'vol_a1i7B 'cite_a1i8B
  ======>
    (\ _p_a1i95 _p_a1i96 _p_a1i97 _p_a1i98 _p_a1i99 _p_a1i9a
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_a1i94
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString
                          "WITH audit_row AS (UPDATE volume_citation SET head=",
                        pgEscapeParameter
                          _tenv_a1i94 (PGTypeProxy :: PGTypeName "text") _p_a1i95,
                        Data.String.fromString ",url=",
                        pgEscapeParameter
                          _tenv_a1i94 (PGTypeProxy :: PGTypeName "text") _p_a1i96,
                        Data.String.fromString ",year=",
                        pgEscapeParameter
                          _tenv_a1i94 (PGTypeProxy :: PGTypeName "smallint") _p_a1i97,
                        Data.String.fromString " WHERE volume=",
                        pgEscapeParameter
                          _tenv_a1i94 (PGTypeProxy :: PGTypeName "integer") _p_a1i98,
                        Data.String.fromString
                          " RETURNING *) INSERT INTO audit.volume_citation SELECT CURRENT_TIMESTAMP, ",
                        pgEscapeParameter
                          _tenv_a1i94 (PGTypeProxy :: PGTypeName "integer") _p_a1i99,
                        Data.String.fromString ", ",
                        pgEscapeParameter
                          _tenv_a1i94 (PGTypeProxy :: PGTypeName "inet") _p_a1i9a,
                        Data.String.fromString
                          ", 'change'::audit.action, * FROM audit_row"]))
            (\ _tenv_a1i94 [] -> ()))
      (citationHead cite)
      (citationURL cite)
      (citationYear cite)
      (volumeId $ volumeRow vol)
      (auditWho ident)
      (auditIp ident)
src/Model/Citation.hs:174:9-46: Splicing expression
    insertVolumeCitation 'ident_a1i7D 'vol_a1i7B 'cite_a1i8B
  ======>
    (\ _p_a1ia0 _p_a1ia1 _p_a1ia2 _p_a1ia3 _p_a1ia4 _p_a1ia5
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_a1i9Y
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString
                          "WITH audit_row AS (INSERT INTO volume_citation (volume,head,url,year) VALUES (",
                        pgEscapeParameter
                          _tenv_a1i9Y (PGTypeProxy :: PGTypeName "integer") _p_a1ia0,
                        Data.String.fromString ",",
                        pgEscapeParameter
                          _tenv_a1i9Y (PGTypeProxy :: PGTypeName "text") _p_a1ia1,
                        Data.String.fromString ",",
                        pgEscapeParameter
                          _tenv_a1i9Y (PGTypeProxy :: PGTypeName "text") _p_a1ia2,
                        Data.String.fromString ",",
                        pgEscapeParameter
                          _tenv_a1i9Y (PGTypeProxy :: PGTypeName "smallint") _p_a1ia3,
                        Data.String.fromString
                          ") RETURNING *) INSERT INTO audit.volume_citation SELECT CURRENT_TIMESTAMP, ",
                        pgEscapeParameter
                          _tenv_a1i9Y (PGTypeProxy :: PGTypeName "integer") _p_a1ia4,
                        Data.String.fromString ", ",
                        pgEscapeParameter
                          _tenv_a1i9Y (PGTypeProxy :: PGTypeName "inet") _p_a1ia5,
                        Data.String.fromString ", 'add'::audit.action, * FROM audit_row"]))
            (\ _tenv_a1i9Y [] -> ()))
      (volumeId $ volumeRow vol)
      (citationHead cite)
      (citationURL cite)
      (citationYear cite)
      (auditWho ident)
      (auditIp ident)
src/Model/Citation.hs:181:22-49: Splicing expression
    deleteVolumeLink 'ident_a1iaG 'vol_a1iaE
  ======>
    (\ _p_a1ibJ _p_a1ibK _p_a1ibL
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_a1ibH
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString
                          "WITH audit_row AS (DELETE FROM volume_link WHERE volume=",
                        pgEscapeParameter
                          _tenv_a1ibH (PGTypeProxy :: PGTypeName "integer") _p_a1ibJ,
                        Data.String.fromString
                          " RETURNING *) INSERT INTO audit.volume_link SELECT CURRENT_TIMESTAMP, ",
                        pgEscapeParameter
                          _tenv_a1ibH (PGTypeProxy :: PGTypeName "integer") _p_a1ibK,
                        Data.String.fromString ", ",
                        pgEscapeParameter
                          _tenv_a1ibH (PGTypeProxy :: PGTypeName "inet") _p_a1ibL,
                        Data.String.fromString
                          ", 'remove'::audit.action, * FROM audit_row"]))
            (\ _tenv_a1ibH [] -> ()))
      (volumeId $ volumeRow vol) (auditWho ident) (auditIp ident)
src/Model/Citation.hs:182:33-66: Splicing expression
    insertVolumeLink 'ident_a1iaG 'vol_a1iaE 'link_a1iee
  ======>
    (\ _p_a1ieN _p_a1ieO _p_a1ieP _p_a1ieQ _p_a1ieR
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_a1ieL
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString
                          "WITH audit_row AS (INSERT INTO volume_link (volume,head,url) VALUES (",
                        pgEscapeParameter
                          _tenv_a1ieL (PGTypeProxy :: PGTypeName "integer") _p_a1ieN,
                        Data.String.fromString ",",
                        pgEscapeParameter
                          _tenv_a1ieL (PGTypeProxy :: PGTypeName "text") _p_a1ieO,
                        Data.String.fromString ",",
                        pgEscapeParameter
                          _tenv_a1ieL (PGTypeProxy :: PGTypeName "text") _p_a1ieP,
                        Data.String.fromString
                          ") RETURNING *) INSERT INTO audit.volume_link SELECT CURRENT_TIMESTAMP, ",
                        pgEscapeParameter
                          _tenv_a1ieL (PGTypeProxy :: PGTypeName "integer") _p_a1ieQ,
                        Data.String.fromString ", ",
                        pgEscapeParameter
                          _tenv_a1ieL (PGTypeProxy :: PGTypeName "inet") _p_a1ieR,
                        Data.String.fromString ", 'add'::audit.action, * FROM audit_row"]))
            (\ _tenv_a1ieL [] -> ()))
      (volumeId $ volumeRow vol)
      (citationHead link)
      (citationURL link)
      (auditWho ident)
      (auditIp ident)
