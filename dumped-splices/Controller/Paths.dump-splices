Databrary/Controller/Paths.hs:31:19-30: Splicing expression
    Language.Haskell.TH.Quote.quoteExp R.biCase "a <-> Id a"
  ======>
    ((\ a -> Id a) R.:<->: (\ (Id a) -> a))
Databrary/Controller/Paths.hs:(44,29)-(47,4): Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      R.biCase
      "\n\
      \    Left () <-> TargetProfile\n\
      \    Right i <-> TargetParty i\n\
      \  "
  ======>
    ((\case {
        Left ghc-prim-0.5.0.0:GHC.Tuple.() -> TargetProfile
        Right i -> TargetParty i })
     R.:<->:
       (\case {
          TargetProfile -> Left ghc-prim-0.5.0.0:GHC.Tuple.()
          TargetParty i -> Right i }))
Databrary/Controller/Paths.hs:55:33-64: Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      R.biCase "(a, t) <-> AuthorizeTarget a t"
  ======>
    ((\ (a, t) -> AuthorizeTarget a t)
     R.:<->: (\ (AuthorizeTarget a t) -> (a, t)))
Databrary/Controller/Paths.hs:64:49-81: Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      R.biCase "i <-> VolumeAccessTarget (Id i)"
  ======>
    ((\ i -> VolumeAccessTarget (Id i))
     R.:<->: (\ (VolumeAccessTarget (Id i)) -> i))
Databrary/Controller/Paths.hs:67:23-45: Splicing expression
    Language.Haskell.TH.Quote.quoteExp R.biCase "(c, s) <-> SlotId c s"
  ======>
    ((\ (c, s) -> SlotId c s) R.:<->: (\ (SlotId c s) -> (c, s)))
Databrary/Controller/Paths.hs:84:23-44: Splicing expression
    Language.Haskell.TH.Quote.quoteExp R.biCase "(b, t) <-> TagId b t"
  ======>
    ((\ (b, t) -> TagId b t) R.:<->: (\ (TagId b t) -> (b, t)))
