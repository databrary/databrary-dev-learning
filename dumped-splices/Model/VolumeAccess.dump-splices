src/Databrary/Model/VolumeAccess.hs:40:13-132: Splicing expression
    selectQuery
      (selectVolumeAccess 'vol_aa6Mb 'ident_aa6Md)
      "$WHERE volume_access.individual >= ${perm} ORDER BY individual DESC, sort"
  ======>
    fmap
      (\ (vindividual_aapPc, vchildren_aapPd, vsort_aapPe, vfull_aapPf,
          vid_aapPg, vname_aapPh, vprename_aapPi, vorcid_aapPj,
          vaffiliation_aapPk, vurl_aapPl, vemail_aapPm, vsite_aapPn,
          vmember_aapPo)
         -> ($)
              (VolumeAccess
                 vindividual_aapPc vchildren_aapPd vsort_aapPe vfull_aapPf)
              (Databrary.Model.Party.SQL.permissionParty
                 (Databrary.Model.Party.SQL.makeParty
                    (PartyRow
                       vid_aapPg
                       vname_aapPh
                       vprename_aapPi
                       vorcid_aapPj
                       vaffiliation_aapPk
                       vurl_aapPl)
                    (do { cm_aapPp <- vemail_aapPm;
                          Just (Account cm_aapPp) }))
                 (do { cm_aapPq <- vsite_aapPn;
                       cm_aapPr <- vmember_aapPo;
                       Just (Access cm_aapPq cm_aapPr) })
                 ident_aa6Md)
              vol_aa6Mb)
      ((\ _p_aapRE _p_aapRF _p_aapRG
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_aapRD
                  -> Database.PostgreSQL.Typed.Query.PreparedQuery
                       (Data.String.fromString
                          "SELECT volume_access.individual,volume_access.children,volume_access.sort,volume_access.share_full,party.id,party.name,party.prename,party.orcid,party.affiliation,party.url,account.email,authorize_valid.site,authorize_valid.member FROM volume_access JOIN party LEFT JOIN account USING (id) LEFT JOIN authorize_valid ON party.id = authorize_valid.parent AND authorize_valid.child = $1 ON volume_access.party = party.id AND volume_access.volume = $2 WHERE volume_access.individual >= $3 ORDER BY individual DESC, sort")
                       []
                       [Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aapRE,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aapRF,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_aapRG]
                       [Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "smallint"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "boolean"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "bpchar"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aapRD
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")])
               (\ _tenv_aapRD
                  [_cindividual_aapRH,
                   _cchildren_aapRI,
                   _csort_aapRJ,
                   _cshare_full_aapRK,
                   _cid_aapRL,
                   _cname_aapRM,
                   _cprename_aapRN,
                   _corcid_aapRO,
                   _caffiliation_aapRP,
                   _curl_aapRQ,
                   _cemail_aapRR,
                   _csite_aapRS,
                   _cmember_aapRT]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aapRD
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cindividual_aapRH, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aapRD
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cchildren_aapRI, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aapRD
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "smallint")
                        _csort_aapRJ, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aapRD
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "boolean")
                        _cshare_full_aapRK, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aapRD
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_aapRL, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aapRD
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_aapRM, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aapRD
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cprename_aapRN, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aapRD
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "bpchar")
                        _corcid_aapRO, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aapRD
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _caffiliation_aapRP, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aapRD
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _curl_aapRQ, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aapRD
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cemail_aapRR, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aapRD
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _csite_aapRS, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aapRD
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cmember_aapRT)))
         (view ident :: Id Party) (volumeId $ volumeRow vol) perm)
src/Databrary/Model/VolumeAccess.hs:45:14-86: Splicing expression
    selectQuery
      (selectVolumeAccessParty 'vol_aapWb 'ident_aapWd)
      "WHERE party.id = ${p}"
  ======>
    fmap
      (\ (vid_aar4Y, vname_aar4Z, vprename_aar50, vorcid_aar51,
          vaffiliation_aar52, vurl_aar53, vemail_aar54, vsite_aar55,
          vmember_aar56, vindividual_aar57, vchildren_aar58, vsort_aar59,
          vfull_aar5a)
         -> Databrary.Model.VolumeAccess.SQL.makeVolumeAccessParty
              (Databrary.Model.Party.SQL.permissionParty
                 (Databrary.Model.Party.SQL.makeParty
                    (PartyRow
                       vid_aar4Y
                       vname_aar4Z
                       vprename_aar50
                       vorcid_aar51
                       vaffiliation_aar52
                       vurl_aar53)
                    (do { cm_aar5b <- vemail_aar54;
                          Just (Account cm_aar5b) }))
                 (do { cm_aar5c <- vsite_aar55;
                       cm_aar5d <- vmember_aar56;
                       Just (Access cm_aar5c cm_aar5d) })
                 ident_aapWd)
              (do { cm_aar5e <- vindividual_aar57;
                    cm_aar5f <- vchildren_aar58;
                    Just (VolumeAccess cm_aar5e cm_aar5f vsort_aar59 vfull_aar5a) })
              vol_aapWb)
      ((\ _p_aar5Y _p_aar5Z _p_aar60
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_aar5X
                  -> Database.PostgreSQL.Typed.Query.SimpleQuery
                       (Data.ByteString.concat
                          [Data.String.fromString
                             "SELECT party.id,party.name,party.prename,party.orcid,party.affiliation,party.url,account.email,authorize_valid.site,authorize_valid.member,volume_access.individual,volume_access.children,volume_access.sort,volume_access.share_full FROM party LEFT JOIN account USING (id) LEFT JOIN authorize_valid ON party.id = authorize_valid.parent AND authorize_valid.child = ",
                           Database.PostgreSQL.Typed.Types.pgEscapeParameter
                             _tenv_aar5X
                             (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                                Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                             _p_aar5Y,
                           Data.String.fromString
                             " LEFT JOIN volume_access ON party.id = volume_access.party AND volume_access.volume = ",
                           Database.PostgreSQL.Typed.Types.pgEscapeParameter
                             _tenv_aar5X
                             (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                                Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                             _p_aar5Z,
                           Data.String.fromString " WHERE party.id = ",
                           Database.PostgreSQL.Typed.Types.pgEscapeParameter
                             _tenv_aar5X
                             (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                                Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                             _p_aar60]))
               (\ _tenv_aar5X
                  [_cid_aar61,
                   _cname_aar62,
                   _cprename_aar63,
                   _corcid_aar64,
                   _caffiliation_aar65,
                   _curl_aar66,
                   _cemail_aar67,
                   _csite_aar68,
                   _cmember_aar69,
                   _cindividual_aar6a,
                   _cchildren_aar6b,
                   _csort_aar6c,
                   _cshare_full_aar6d]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aar5X
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_aar61, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aar5X
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_aar62, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aar5X
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cprename_aar63, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aar5X
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "bpchar")
                        _corcid_aar64, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aar5X
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _caffiliation_aar65, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aar5X
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _curl_aar66, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aar5X
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cemail_aar67, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aar5X
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _csite_aar68, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aar5X
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cmember_aar69, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aar5X
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cindividual_aar6a, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aar5X
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cchildren_aar6b, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aar5X
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "smallint")
                        _csort_aar6c, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aar5X
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "boolean")
                        _cshare_full_aar6d)))
         (view ident :: Id Party) (volumeId $ volumeRow vol) p)
src/Databrary/Model/VolumeAccess.hs:50:13-144: Splicing expression
    selectQuery
      (selectPartyVolumeAccess 'p_aar6g 'ident_aar6k)
      "$WHERE volume_access.individual >= ${perm} ORDER BY individual DESC, children DESC"
  ======>
    fmap
      (\ (vindividual_aaAOl, vchildren_aaAOm, vsort_aaAOn, vfull_aaAOo,
          vid_aaAOp, vname_aaAOq, vbody_aaAOr, valias_aaAOs, vdoi_aaAOt,
          vc_aaAOu, vowners_aaAOv, vpermission_aaAOw, vfull_aaAOx)
         -> ($)
              (VolumeAccess
                 vindividual_aaAOl vchildren_aaAOm vsort_aaAOn vfull_aaAOo p_aar6g)
              (Databrary.Model.Volume.SQL.makeVolume
                 (setCreation
                    (VolumeRow
                       vid_aaAOp vname_aaAOq vbody_aaAOr valias_aaAOs vdoi_aaAOt)
                    vc_aaAOu)
                 vowners_aaAOv
                 (Databrary.Model.Volume.SQL.makePermInfo
                    vpermission_aaAOw vfull_aaAOx)))
      ((\ _p_aaAP5 _p_aaAP6 _p_aaAP7 _p_aaAP8 _p_aaAP9 _p_aaAPa
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_aaAP4
                  -> Database.PostgreSQL.Typed.Query.PreparedQuery
                       (Data.String.fromString
                          "SELECT volume_access.individual,volume_access.children,volume_access.sort,volume_access.share_full,volume.id,volume.name,volume.body,volume.alias,volume.doi,volume_creation(volume.id),volume_owners.owners,volume_permission.permission,volume_permission.share_full FROM volume_access JOIN volume LEFT JOIN volume_owners ON volume.id = volume_owners.volume JOIN LATERAL   (VALUES      ( CASE WHEN $1              THEN enum_last(NULL::permission)              ELSE volume_access_check(volume.id, $2) END      , CASE WHEN $3              THEN null              ELSE (select share_full                    from volume_access_view                    where volume = volume.id and party = $4                    limit 1) END )   ) AS volume_permission (permission, share_full) ON volume_permission.permission >= 'PUBLIC'::permission ON volume_access.volume = volume.id AND volume_access.party = $5 WHERE volume_access.individual >= $6 ORDER BY individual DESC, children DESC")
                       []
                       [Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "boolean")
                          _p_aaAP5,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaAP6,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "boolean")
                          _p_aaAP7,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaAP8,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaAP9,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_aaAPa]
                       [Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "smallint"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "boolean"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text[]"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaAP4
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "boolean")])
               (\ _tenv_aaAP4
                  [_cindividual_aaAPb,
                   _cchildren_aaAPc,
                   _csort_aaAPd,
                   _cshare_full_aaAPe,
                   _cid_aaAPf,
                   _cname_aaAPg,
                   _cbody_aaAPh,
                   _calias_aaAPi,
                   _cdoi_aaAPj,
                   _cvolume_creation_aaAPk,
                   _cowners_aaAPl,
                   _cpermission_aaAPm,
                   _cshare_full_aaAPn]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAP4
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cindividual_aaAPb, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAP4
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cchildren_aaAPc, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAP4
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "smallint")
                        _csort_aaAPd, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAP4
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "boolean")
                        _cshare_full_aaAPe, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAP4
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_aaAPf, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAP4
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_aaAPg, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAP4
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cbody_aaAPh, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAP4
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _calias_aaAPi, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAP4
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cdoi_aaAPj, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAP4
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                        _cvolume_creation_aaAPk, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaAP4
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text[]")
                        _cowners_aaAPl, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAP4
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cpermission_aaAPm, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaAP4
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "boolean")
                        _cshare_full_aaAPn)))
         (identitySuperuser ident)
         (view ident :: Id Party)
         (identitySuperuser ident)
         (view ident :: Id Party)
         (partyId $ partyRow p)
         perm)
src/Databrary/Model/VolumeAccess.hs:55:13-202: Splicing expression
    selectDistinctQuery
      (Just ["volume.id"])
      (selectVolume 'ident_aaAPE)
      "$JOIN volume_access_view ON volume.id = volume_access_view.volume WHERE party = ${partyId $ partyRow p} AND access >= ${perm}"
  ======>
    fmap
      (\ (vid_aaAQt, vname_aaAQu, vbody_aaAQv, valias_aaAQw, vdoi_aaAQx,
          vc_aaAQy, vowners_aaAQz, vpermission_aaAQA, vfull_aaAQB)
         -> Databrary.Model.Volume.SQL.makeVolume
              (setCreation
                 (VolumeRow
                    vid_aaAQt vname_aaAQu vbody_aaAQv valias_aaAQw vdoi_aaAQx)
                 vc_aaAQy)
              vowners_aaAQz
              (Databrary.Model.Volume.SQL.makePermInfo
                 vpermission_aaAQA vfull_aaAQB))
      ((\ _p_aaARm _p_aaARn _p_aaARo _p_aaARp _p_aaARq _p_aaARr
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_aaARl
                  -> Database.PostgreSQL.Typed.Query.PreparedQuery
                       (Data.String.fromString
                          "SELECT DISTINCT ON (volume.id) volume.id,volume.name,volume.body,volume.alias,volume.doi,volume_creation(volume.id),volume_owners.owners,volume_permission.permission,volume_permission.share_full FROM volume LEFT JOIN volume_owners ON volume.id = volume_owners.volume JOIN LATERAL   (VALUES      ( CASE WHEN $1              THEN enum_last(NULL::permission)              ELSE volume_access_check(volume.id, $2) END      , CASE WHEN $3              THEN null              ELSE (select share_full                    from volume_access_view                    where volume = volume.id and party = $4                    limit 1) END )   ) AS volume_permission (permission, share_full) ON volume_permission.permission >= 'PUBLIC'::permission JOIN volume_access_view ON volume.id = volume_access_view.volume WHERE party = $5 AND access >= $6")
                       []
                       [Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaARl
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "boolean")
                          _p_aaARm,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaARl
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaARn,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaARl
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "boolean")
                          _p_aaARo,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaARl
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaARp,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaARl
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaARq,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaARl
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_aaARr]
                       [Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaARl
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaARl
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaARl
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaARl
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaARl
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaARl
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaARl
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text[]"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaARl
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaARl
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "boolean")])
               (\ _tenv_aaARl
                  [_cid_aaARs,
                   _cname_aaARt,
                   _cbody_aaARu,
                   _calias_aaARv,
                   _cdoi_aaARw,
                   _cvolume_creation_aaARx,
                   _cowners_aaARy,
                   _cpermission_aaARz,
                   _cshare_full_aaARA]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaARl
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_aaARs, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaARl
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_aaARt, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaARl
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cbody_aaARu, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaARl
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _calias_aaARv, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaARl
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cdoi_aaARw, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaARl
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                        _cvolume_creation_aaARx, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaARl
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text[]")
                        _cowners_aaARy, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaARl
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cpermission_aaARz, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaARl
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "boolean")
                        _cshare_full_aaARA)))
         (identitySuperuser ident)
         (view ident :: Id Party)
         (identitySuperuser ident)
         (view ident :: Id Party)
         (partyId $ partyRow p)
         perm)
src/Databrary/Model/VolumeAccess.hs:75:23-51: Splicing expression
    deleteVolumeAccess 'ident_aaASA 'va_aaASz
  ======>
    (\ _p_aaAUD _p_aaAUE _p_aaAUF _p_aaAUG
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_aaAUC
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString
                          "WITH audit_row AS (DELETE FROM volume_access WHERE volume=",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaAUC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaAUD,
                        Data.String.fromString " AND party=",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaAUC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaAUE,
                        Data.String.fromString
                          " RETURNING *) INSERT INTO audit.volume_access SELECT CURRENT_TIMESTAMP, ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaAUC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaAUF,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaAUC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "inet")
                          _p_aaAUG,
                        Data.String.fromString
                          ", 'remove'::audit.action, * FROM audit_row"]))
            (\ _tenv_aaAUC [] -> ()))
      (volumeId $ volumeRow $ volumeAccessVolume va)
      (partyId $ partyRow $ volumeAccessParty va)
      (auditWho ident)
      (auditIp ident)
src/Databrary/Model/VolumeAccess.hs:77:9-37: Splicing expression
    updateVolumeAccess 'ident_aaASA 'va_aaASz
  ======>
    (\ _p_aaAZu
       _p_aaAZv
       _p_aaAZw
       _p_aaAZx
       _p_aaAZy
       _p_aaAZz
       _p_aaAZA
       _p_aaAZB
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_aaAZt
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString
                          "WITH audit_row AS (UPDATE volume_access SET individual=",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaAZt
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_aaAZu,
                        Data.String.fromString ",children=",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaAZt
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_aaAZv,
                        Data.String.fromString ",sort=",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaAZt
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "smallint")
                          _p_aaAZw,
                        Data.String.fromString ",share_full=",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaAZt
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "boolean")
                          _p_aaAZx,
                        Data.String.fromString " WHERE volume=",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaAZt
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaAZy,
                        Data.String.fromString " AND party=",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaAZt
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaAZz,
                        Data.String.fromString
                          " RETURNING *) INSERT INTO audit.volume_access SELECT CURRENT_TIMESTAMP, ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaAZt
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaAZA,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaAZt
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "inet")
                          _p_aaAZB,
                        Data.String.fromString
                          ", 'change'::audit.action, * FROM audit_row"]))
            (\ _tenv_aaAZt [] -> ()))
      (volumeAccessIndividual va)
      (volumeAccessChildren va)
      (volumeAccessSort va)
      (volumeAccessShareFull va)
      (volumeId $ volumeRow $ volumeAccessVolume va)
      (partyId $ partyRow $ volumeAccessParty va)
      (auditWho ident)
      (auditIp ident)
src/Databrary/Model/VolumeAccess.hs:78:9-37: Splicing expression
    insertVolumeAccess 'ident_aaASA 'va_aaASz
  ======>
    (\ _p_aaB56
       _p_aaB57
       _p_aaB58
       _p_aaB5a
       _p_aaB5b
       _p_aaB5c
       _p_aaB5d
       _p_aaB5e
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_aaB55
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString
                          "WITH audit_row AS (INSERT INTO volume_access (volume,party,individual,children,sort,share_full) VALUES (",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaB55
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaB56,
                        Data.String.fromString ",",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaB55
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaB57,
                        Data.String.fromString ",",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaB55
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_aaB58,
                        Data.String.fromString ",",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaB55
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_aaB5a,
                        Data.String.fromString ",",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaB55
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "smallint")
                          _p_aaB5b,
                        Data.String.fromString ",",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaB55
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "boolean")
                          _p_aaB5c,
                        Data.String.fromString
                          ") RETURNING *) INSERT INTO audit.volume_access SELECT CURRENT_TIMESTAMP, ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaB55
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaB5d,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_aaB55
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "inet")
                          _p_aaB5e,
                        Data.String.fromString ", 'add'::audit.action, * FROM audit_row"]))
            (\ _tenv_aaB55 [] -> ()))
      (volumeId $ volumeRow $ volumeAccessVolume va)
      (partyId $ partyRow $ volumeAccessParty va)
      (volumeAccessIndividual va)
      (volumeAccessChildren va)
      (volumeAccessSort va)
      (volumeAccessShareFull va)
      (auditWho ident)
      (auditIp ident)
src/Databrary/Model/VolumeAccess.hs:103:13-205: Splicing expression
    selectQuery
      (selectVolumeActivity 'ident_aaBb9)
      "$WHERE audit.audit_action = 'add' AND audit.party = 0 AND audit.children > 'NONE' ORDER BY audit.audit_time DESC LIMIT ${fromIntegral limit :: Int64}"
  ======>
    fmap
      (\ (vtime_aaBdU, vid_aaBdV, vname_aaBdW, vbody_aaBdX, valias_aaBdY,
          vdoi_aaBdZ, vc_aaBe1, vowners_aaBe2, vpermission_aaBe3,
          vfull_aaBe4)
         -> ghc-prim-0.5.0.0:GHC.Tuple.(,)
              vtime_aaBdU
              (Databrary.Model.Volume.SQL.makeVolume
                 (setCreation
                    (VolumeRow
                       vid_aaBdV vname_aaBdW vbody_aaBdX valias_aaBdY vdoi_aaBdZ)
                    vc_aaBe1)
                 vowners_aaBe2
                 (Databrary.Model.Volume.SQL.makePermInfo
                    vpermission_aaBe3 vfull_aaBe4)))
      ((\ _p_aaBhW _p_aaBhZ _p_aaBi1 _p_aaBi4 _p_aaBi6
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_aaBhR
                  -> Database.PostgreSQL.Typed.Query.PreparedQuery
                       (Data.String.fromString
                          "SELECT audit.audit_time,volume.id,volume.name,volume.body,volume.alias,volume.doi,volume_creation(volume.id),volume_owners.owners,volume_permission.permission,volume_permission.share_full FROM audit.volume_access AS audit JOIN volume LEFT JOIN volume_owners ON volume.id = volume_owners.volume JOIN LATERAL   (VALUES      ( CASE WHEN $1              THEN enum_last(NULL::permission)              ELSE volume_access_check(volume.id, $2) END      , CASE WHEN $3              THEN null              ELSE (select share_full                    from volume_access_view                    where volume = volume.id and party = $4                    limit 1) END )   ) AS volume_permission (permission, share_full) ON volume_permission.permission >= 'PUBLIC'::permission ON audit.volume = volume.id WHERE audit.audit_action = 'add' AND audit.party = 0 AND audit.children > 'NONE' ORDER BY audit.audit_time DESC LIMIT $5")
                       []
                       [Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaBhR
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "boolean")
                          _p_aaBhW,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaBhR
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaBhZ,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaBhR
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "boolean")
                          _p_aaBi1,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaBhR
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_aaBi4,
                        Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_aaBhR
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "bigint")
                          _p_aaBi6]
                       [Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBhR
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBhR
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBhR
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBhR
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBhR
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBhR
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBhR
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBhR
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text[]"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBhR
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_aaBhR
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "boolean")])
               (\ _tenv_aaBhR
                  [_caudit_time_aaBi9,
                   _cid_aaBia,
                   _cname_aaBib,
                   _cbody_aaBic,
                   _calias_aaBif,
                   _cdoi_aaBig,
                   _cvolume_creation_aaBih,
                   _cowners_aaBij,
                   _cpermission_aaBik,
                   _cshare_full_aaBil]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaBhR
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                        _caudit_time_aaBi9, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaBhR
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_aaBia, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaBhR
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_aaBib, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaBhR
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cbody_aaBic, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaBhR
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _calias_aaBif, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaBhR
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cdoi_aaBig, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaBhR
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                        _cvolume_creation_aaBih, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_aaBhR
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text[]")
                        _cowners_aaBij, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaBhR
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cpermission_aaBik, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_aaBhR
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "boolean")
                        _cshare_full_aaBil)))
         (identitySuperuser ident)
         (view ident :: Id Party)
         (identitySuperuser ident)
         (view ident :: Id Party)
         (fromIntegral limit :: Int64))
