src/Databrary/Model/Notification.hs:37:1-6: Splicing declarations
    useTDB ======>
src/Databrary/Model/Notification.hs:42:30-567: Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      pgSQL
      "INSERT INTO notification (target, notice, delivered, agent, party, volume, container, segment, asset, comment, tag, permission, release) VALUES (${partyId $ partyRow $ accountParty notificationTarget}, ${notificationNotice}, ${notificationDelivered}, ${partyId u}, ${partyId <$> notificationParty}, ${volumeId <$> notificationVolume}, ${notificationContainerId}, ${notificationSegment}, ${notificationAssetId}, ${notificationCommentId}, ${tagId <$> notificationTag}, ${notificationPermission}, ${notificationRelease}) RETURNING id, time"
  ======>
    (\ _p_abkOn
       _p_abkOo
       _p_abkOp
       _p_abkOq
       _p_abkOr
       _p_abkOs
       _p_abkOt
       _p_abkOu
       _p_abkOv
       _p_abkOw
       _p_abkOx
       _p_abkOy
       _p_abkOz
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_abkOm
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString
                          "INSERT INTO notification (target, notice, delivered, agent, party, volume, container, segment, asset, comment, tag, permission, release) VALUES (",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkOm
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkOn,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkOm
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "smallint")
                          _p_abkOo,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkOm
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "notice_delivery")
                          _p_abkOp,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkOm
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkOq,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkOm
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkOr,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkOm
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkOs,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkOm
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkOt,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkOm
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "segment")
                          _p_abkOu,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkOm
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkOv,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkOm
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkOw,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkOm
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkOx,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkOm
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_abkOy,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkOm
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "release")
                          _p_abkOz,
                        Data.String.fromString ") RETURNING id, time"]))
            (\ _tenv_abkOm [_cid_abkOA, _ctime_abkOB]
               -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                     _tenv_abkOm
                     (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                        Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                     _cid_abkOA, 
                   Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                     _tenv_abkOm
                     (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                        Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                     _ctime_abkOB)))
      (partyId $ partyRow $ accountParty notificationTarget)
      notificationNotice
      notificationDelivered
      (partyId u)
      (partyId <$> notificationParty)
      (volumeId <$> notificationVolume)
      notificationContainerId
      notificationSegment
      notificationAssetId
      notificationCommentId
      (tagId <$> notificationTag)
      notificationPermission
      notificationRelease
src/Databrary/Model/Notification.hs:52:20-559: Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      pgSQL
      "INSERT INTO notification (target, notice, delivered, agent, party, volume, container, segment, asset, comment, tag, permission, release) SELECT target, notice, ${notificationDelivered}, ${u}, ${partyId <$> notificationParty}, ${volumeId <$> notificationVolume}, ${notificationContainerId}, ${notificationSegment}, ${notificationAssetId}, ${notificationCommentId}, ${tagId <$> notificationTag}, ${notificationPermission}, ${notificationRelease} FROM notify_view WHERE notice = ${notificationNotice} AND delivery > 'none' AND target <> ${u}"
  ======>
    (\ _p_abkQD
       _p_abkQE
       _p_abkQF
       _p_abkQG
       _p_abkQH
       _p_abkQI
       _p_abkQJ
       _p_abkQK
       _p_abkQL
       _p_abkQM
       _p_abkQN
       _p_abkQO
       _p_abkQP
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_abkQC
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString
                          "INSERT INTO notification (target, notice, delivered, agent, party, volume, container, segment, asset, comment, tag, permission, release) SELECT target, notice, ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkQC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "notice_delivery")
                          _p_abkQD,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkQC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkQE,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkQC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkQF,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkQC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkQG,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkQC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkQH,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkQC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "segment")
                          _p_abkQI,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkQC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkQJ,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkQC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkQK,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkQC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkQL,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkQC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                          _p_abkQM,
                        Data.String.fromString ", ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkQC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "release")
                          _p_abkQN,
                        Data.String.fromString " FROM notify_view WHERE notice = ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkQC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "smallint")
                          _p_abkQO,
                        Data.String.fromString " AND delivery > 'none' AND target <> ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkQC
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkQP]))
            (\ _tenv_abkQC [] -> ()))
      notificationDelivered
      u
      (partyId <$> notificationParty)
      (volumeId <$> notificationVolume)
      notificationContainerId
      notificationSegment
      notificationAssetId
      notificationCommentId
      (tagId <$> notificationTag)
      notificationPermission
      notificationRelease
      notificationNotice
      u
src/Databrary/Model/Notification.hs:56:20-124: Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      pgSQL
      "UPDATE notification SET delivered = ${d} WHERE id = ANY (${map notificationId nl}) AND delivered < ${d}"
  ======>
    (\ _p_abkRR _p_abkRS _p_abkRT
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_abkRQ
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString "UPDATE notification SET delivered = ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkRQ
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "notice_delivery")
                          _p_abkRR,
                        Data.String.fromString " WHERE id = ANY (",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkRQ
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer[]")
                          _p_abkRS,
                        Data.String.fromString ") AND delivered < ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_abkRQ
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "notice_delivery")
                          _p_abkRT]))
            (\ _tenv_abkRQ [] -> ()))
      d (map notificationId nl) d
src/Databrary/Model/Notification.hs:61:25-130: Splicing expression
    selectQuery
      selectTargetNotification
      "$WHERE target = ${view u :: Id Party} ORDER BY notification.id DESC"
  ======>
    fmap
      (\ (vid_abkSW, vnotice_abkSX, vtime_abkSY, vdelivered_abkSZ,
          vpermission_abkT0, vcontainer_abkT1, vsegment_abkT2, vasset_abkT3,
          vrelease_abkT4, vcomment_abkT5, vid_abkT6, vname_abkT7,
          vprename_abkT8, vorcid_abkT9, vaffiliation_abkTa, vurl_abkTb,
          vid_abkTc, vname_abkTd, vprename_abkTe, vorcid_abkTf,
          vaffiliation_abkTg, vurl_abkTh, vid_abkTi, vname_abkTk,
          vbody_abkTl, valias_abkTm, vdoi_abkTn, vid_abkTo, vname_abkTp)
         -> ($)
              (Databrary.Model.Notification.SQL.makeNotification
                 vid_abkSW
                 vnotice_abkSX
                 vtime_abkSY
                 vdelivered_abkSZ
                 vpermission_abkT0
                 vcontainer_abkT1
                 vsegment_abkT2
                 vasset_abkT3
                 vrelease_abkT4
                 vcomment_abkT5)
              (PartyRow
                 vid_abkT6
                 vname_abkT7
                 vprename_abkT8
                 vorcid_abkT9
                 vaffiliation_abkTa
                 vurl_abkTb)
              (do { cm_abkTz <- vid_abkTc;
                    cm_abkTA <- vname_abkTd;
                    Just
                      (PartyRow
                         cm_abkTz
                         cm_abkTA
                         vprename_abkTe
                         vorcid_abkTf
                         vaffiliation_abkTg
                         vurl_abkTh) })
              (do { cm_abkTB <- vid_abkTi;
                    cm_abkTC <- vname_abkTk;
                    Just
                      (VolumeRow
                         cm_abkTB cm_abkTC vbody_abkTl valias_abkTm vdoi_abkTn) })
              (do { cm_abkTD <- vid_abkTo;
                    cm_abkTE <- vname_abkTp;
                    Just (Tag cm_abkTD cm_abkTE) }))
      ((\ _p_abkWr
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_abkWq
                  -> Database.PostgreSQL.Typed.Query.PreparedQuery
                       (Data.String.fromString
                          "SELECT notification.id,notification.notice,notification.time,notification.delivered,notification.permission,notification.container,notification.segment,notification.asset,notification.release,notification.comment,agent.id,agent.name,agent.prename,agent.orcid,agent.affiliation,agent.url,nparty.id,nparty.name,nparty.prename,nparty.orcid,nparty.affiliation,nparty.url,volume.id,volume.name,volume.body,volume.alias,volume.doi,tag.id,tag.name FROM notification JOIN party AS agent ON notification.agent = agent.id LEFT JOIN party AS nparty ON notification.party = nparty.id LEFT JOIN volume ON notification.volume = volume.id LEFT JOIN tag ON notification.tag = tag.id WHERE target = $1 ORDER BY notification.id DESC")
                       []
                       [Database.PostgreSQL.Typed.Types.pgEncodeParameter
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_abkWr]
                       [Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "smallint"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "notice_delivery"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "permission"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "segment"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "release"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "bpchar"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "bpchar"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "text"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer"),
                        Database.PostgreSQL.Typed.Types.pgBinaryColumn
                          _tenv_abkWq
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "character varying")])
               (\ _tenv_abkWq
                  [_cid_abkWs,
                   _cnotice_abkWt,
                   _ctime_abkWu,
                   _cdelivered_abkWv,
                   _cpermission_abkWw,
                   _ccontainer_abkWx,
                   _csegment_abkWy,
                   _casset_abkWz,
                   _crelease_abkWA,
                   _ccomment_abkWB,
                   _cid_abkWC,
                   _cname_abkWD,
                   _cprename_abkWE,
                   _corcid_abkWF,
                   _caffiliation_abkWG,
                   _curl_abkWH,
                   _cid_abkWI,
                   _cname_abkWJ,
                   _cprename_abkWK,
                   _corcid_abkWL,
                   _caffiliation_abkWM,
                   _curl_abkWN,
                   _cid_abkWO,
                   _cname_abkWP,
                   _cbody_abkWQ,
                   _calias_abkWR,
                   _cdoi_abkWS,
                   _cid_abkWT,
                   _cname_abkWU]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_abkWs, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "smallint")
                        _cnotice_abkWt, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                        _ctime_abkWu, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "notice_delivery")
                        _cdelivered_abkWv, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cpermission_abkWw, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _ccontainer_abkWx, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "segment")
                        _csegment_abkWy, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _casset_abkWz, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "release")
                        _crelease_abkWA, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _ccomment_abkWB, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_abkWC, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_abkWD, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cprename_abkWE, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "bpchar")
                        _corcid_abkWF, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _caffiliation_abkWG, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _curl_abkWH, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_abkWI, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_abkWJ, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cprename_abkWK, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "bpchar")
                        _corcid_abkWL, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _caffiliation_abkWM, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _curl_abkWN, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_abkWO, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_abkWP, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cbody_abkWQ, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _calias_abkWR, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cdoi_abkWS, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_abkWT, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_abkWq
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cname_abkWU)))
         (view u :: Id Party))
src/Databrary/Model/Notification.hs:66:38-129: Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      pgSQL
      "$SELECT count(id) FROM notification WHERE target = ${u :: Id Party} AND delivered = 'none'"
  ======>
    (\ _p_abliQ
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_abliP
               -> Database.PostgreSQL.Typed.Query.PreparedQuery
                    (Data.String.fromString
                       "SELECT count(id) FROM notification WHERE target = $1 AND delivered = 'none'")
                    []
                    [Database.PostgreSQL.Typed.Types.pgEncodeParameter
                       _tenv_abliP
                       (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                          Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                       _p_abliQ]
                    [Database.PostgreSQL.Typed.Types.pgBinaryColumn
                       _tenv_abliP
                       (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                          Database.PostgreSQL.Typed.Types.PGTypeName "bigint")])
            (\ _tenv_abliP [_ccount_abliR]
               -> (Database.PostgreSQL.Typed.Types.pgDecodeColumn
                     _tenv_abliP
                     (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                        Database.PostgreSQL.Typed.Types.PGTypeName "bigint")
                     _ccount_abliR)))
      (u :: Id Party)
src/Databrary/Model/Notification.hs:70:13-176: Splicing expression
    selectQuery
      selectNotification
      "JOIN notify_view USING (target, notice) WHERE delivery >= ${d} AND delivered = 'none' ORDER BY notification.target, notification.id"
  ======>
    fmap
      (\ (vid_abllf, vnotice_abllg, vtime_abllh, vdelivered_ablli,
          vpermission_abllj, vcontainer_abllk, vsegment_ablll, vasset_abllm,
          vrelease_ablln, vcomment_abllo, vid_abllp, vname_abllq,
          vprename_abllr, vorcid_ablls, vaffiliation_abllt, vurl_abllu,
          vid_abllv, vname_abllw, vprename_ablly, vorcid_abllz,
          vaffiliation_abllA, vurl_abllB, vid_abllC, vname_abllD,
          vbody_abllF, valias_abllG, vdoi_abllH, vid_abllI, vname_abllJ,
          vid_abllK, vname_abllL, vprename_abllM, vorcid_abllN,
          vaffiliation_abllO, vurl_abllP, vemail_abllQ)
         -> ($)
              (($)
                 (Databrary.Model.Notification.SQL.makeNotification
                    vid_abllf
                    vnotice_abllg
                    vtime_abllh
                    vdelivered_ablli
                    vpermission_abllj
                    vcontainer_abllk
                    vsegment_ablll
                    vasset_abllm
                    vrelease_ablln
                    vcomment_abllo)
                 (PartyRow
                    vid_abllp
                    vname_abllq
                    vprename_abllr
                    vorcid_ablls
                    vaffiliation_abllt
                    vurl_abllu)
                 (do { cm_ablms <- vid_abllv;
                       cm_ablmu <- vname_abllw;
                       Just
                         (PartyRow
                            cm_ablms
                            cm_ablmu
                            vprename_ablly
                            vorcid_abllz
                            vaffiliation_abllA
                            vurl_abllB) })
                 (do { cm_ablmw <- vid_abllC;
                       cm_ablmx <- vname_abllD;
                       Just
                         (VolumeRow
                            cm_ablmw cm_ablmx vbody_abllF valias_abllG vdoi_abllH) })
                 (do { cm_ablmy <- vid_abllI;
                       cm_ablmz <- vname_abllJ;
                       Just (Tag cm_ablmy cm_ablmz) }))
              (Databrary.Model.Party.SQL.makeUserAccount
                 (Databrary.Model.Party.SQL.makeAccount
                    (PartyRow
                       vid_abllK
                       vname_abllL
                       vprename_abllM
                       vorcid_abllN
                       vaffiliation_abllO
                       vurl_abllP)
                    (Account vemail_abllQ))))
      ((\ _p_ablvp
          -> Database.PostgreSQL.Typed.Query.QueryParser
               (\ _tenv_ablvn
                  -> Database.PostgreSQL.Typed.Query.SimpleQuery
                       (Data.ByteString.concat
                          [Data.String.fromString
                             "SELECT notification.id,notification.notice,notification.time,notification.delivered,notification.permission,notification.container,notification.segment,notification.asset,notification.release,notification.comment,agent.id,agent.name,agent.prename,agent.orcid,agent.affiliation,agent.url,nparty.id,nparty.name,nparty.prename,nparty.orcid,nparty.affiliation,nparty.url,volume.id,volume.name,volume.body,volume.alias,volume.doi,tag.id,tag.name,party.id,party.name,party.prename,party.orcid,party.affiliation,party.url,account.email FROM notification JOIN party AS agent ON notification.agent = agent.id LEFT JOIN party AS nparty ON notification.party = nparty.id LEFT JOIN volume ON notification.volume = volume.id LEFT JOIN tag ON notification.tag = tag.id JOIN party JOIN account USING (id) ON notification.target = account.id JOIN notify_view USING (target, notice) WHERE delivery >= ",
                           Database.PostgreSQL.Typed.Types.pgEscapeParameter
                             _tenv_ablvn
                             (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                                Database.PostgreSQL.Typed.Types.PGTypeName "notice_delivery")
                             _p_ablvp,
                           Data.String.fromString
                             " AND delivered = 'none' ORDER BY notification.target, notification.id"]))
               (\ _tenv_ablvn
                  [_cid_ablvr,
                   _cnotice_ablvs,
                   _ctime_ablvu,
                   _cdelivered_ablvv,
                   _cpermission_ablvw,
                   _ccontainer_ablvx,
                   _csegment_ablvy,
                   _casset_ablvz,
                   _crelease_ablvA,
                   _ccomment_ablvB,
                   _cid_ablvC,
                   _cname_ablvD,
                   _cprename_ablvE,
                   _corcid_ablvG,
                   _caffiliation_ablvH,
                   _curl_ablvI,
                   _cid_ablvJ,
                   _cname_ablvK,
                   _cprename_ablvL,
                   _corcid_ablvM,
                   _caffiliation_ablvN,
                   _curl_ablvO,
                   _cid_ablvP,
                   _cname_ablvQ,
                   _cbody_ablvR,
                   _calias_ablvS,
                   _cdoi_ablvT,
                   _cid_ablvU,
                   _cname_ablvV,
                   _cid_ablvW,
                   _cname_ablvX,
                   _cprename_ablvY,
                   _corcid_ablvZ,
                   _caffiliation_ablw0,
                   _curl_ablw1,
                   _cemail_ablw2]
                  -> (Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_ablvr, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "smallint")
                        _cnotice_ablvs, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "timestamp with time zone")
                        _ctime_ablvu, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "notice_delivery")
                        _cdelivered_ablvv, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "permission")
                        _cpermission_ablvw, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _ccontainer_ablvx, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "segment")
                        _csegment_ablvy, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _casset_ablvz, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "release")
                        _crelease_ablvA, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _ccomment_ablvB, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_ablvC, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_ablvD, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cprename_ablvE, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "bpchar")
                        _corcid_ablvG, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _caffiliation_ablvH, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _curl_ablvI, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_ablvJ, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_ablvK, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cprename_ablvL, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "bpchar")
                        _corcid_ablvM, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _caffiliation_ablvN, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _curl_ablvO, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_ablvP, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_ablvQ, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cbody_ablvR, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _calias_ablvS, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cdoi_ablvT, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_ablvU, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cname_ablvV, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                        _cid_ablvW, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cname_ablvX, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _cprename_ablvY, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "bpchar")
                        _corcid_ablvZ, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _caffiliation_ablw0, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumn
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "text")
                        _curl_ablw1, 
                      Database.PostgreSQL.Typed.Types.pgDecodeColumnNotNull
                        _tenv_ablvn
                        (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                           Database.PostgreSQL.Typed.Types.PGTypeName "character varying")
                        _cemail_ablw2)))
         d)
src/Databrary/Model/Notification.hs:75:21-92: Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      pgSQL
      "DELETE FROM notification WHERE id = ${i} AND target = ${p :: Id Party}"
  ======>
    (\ _p_ablFJ _p_ablFK
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_ablFI
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString "DELETE FROM notification WHERE id = ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_ablFI
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_ablFJ,
                        Data.String.fromString " AND target = ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_ablFI
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_ablFK]))
            (\ _tenv_ablFI [] -> ()))
      i (p :: Id Party)
src/Databrary/Model/Notification.hs:80:20-124: Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      pgSQL
      "DELETE FROM notification WHERE target = ${p :: Id Party} AND agent <> ${partyId $ partyRow nobodyParty}"
  ======>
    (\ _p_ablJG _p_ablJH
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_ablJE
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString "DELETE FROM notification WHERE target = ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_ablJE
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_ablJG,
                        Data.String.fromString " AND agent <> ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_ablJE
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_ablJH]))
            (\ _tenv_ablJE [] -> ()))
      (p :: Id Party) (partyId $ partyRow nobodyParty)
src/Databrary/Model/Notification.hs:84:20-120: Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      pgSQL
      "DELETE FROM notification WHERE delivered > 'none' AND time < CURRENT_TIMESTAMP - interval '30 days'"
  ======>
    \ -> Database.PostgreSQL.Typed.Query.QueryParser
           (\ _tenv_ablNw
              -> Database.PostgreSQL.Typed.Query.SimpleQuery
                   (Data.ByteString.concat
                      [Data.String.fromString
                         "DELETE FROM notification WHERE delivered > 'none' AND time < CURRENT_TIMESTAMP - interval '30 days'"]))
           (\ _tenv_ablNw [] -> ())
src/Databrary/Model/Notification.hs:(88,20)-(99,6): Splicing expression
    Language.Haskell.TH.Quote.quoteExp
      pgSQL
      "DELETE FROM notification\n\
      \    WHERE notice = ${notificationNotice}\n\
      \      AND target = COALESCE(${mfilter (no /=) $ Just $ partyId $ partyRow $ accountParty notificationTarget}, target) \n\
      \      AND agent = COALESCE(${mfilter (no /=) $ Just $ partyId notificationAgent}, agent) \n\
      \      AND COALESCE(party, -1) = COALESCE(${partyId <$> notificationParty}, party, -1)\n\
      \      AND COALESCE(volume, -1) = COALESCE(${volumeId <$> notificationVolume}, volume, -1)\n\
      \      AND COALESCE(container, -1) = COALESCE(${notificationContainerId}, container, -1)\n\
      \      AND COALESCE(segment, 'empty') <@ ${fromMaybe fullSegment notificationSegment} \n\
      \      AND COALESCE(asset, -1) = COALESCE(${notificationAssetId}, asset, -1)\n\
      \      AND COALESCE(comment, -1) = COALESCE(${notificationCommentId}, comment, -1)\n\
      \      AND COALESCE(tag, -1) = COALESCE(${tagId <$> notificationTag}, tag, -1)\n\
      \    "
  ======>
    (\ _p_ablVt
       _p_ablVu
       _p_ablVv
       _p_ablVw
       _p_ablVx
       _p_ablVy
       _p_ablVz
       _p_ablVA
       _p_ablVB
       _p_ablVC
       -> Database.PostgreSQL.Typed.Query.QueryParser
            (\ _tenv_ablVs
               -> Database.PostgreSQL.Typed.Query.SimpleQuery
                    (Data.ByteString.concat
                       [Data.String.fromString
                          "DELETE FROM notification\n\
                          \    WHERE notice = ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_ablVs
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "smallint")
                          _p_ablVt,
                        Data.String.fromString
                          "\n\
                          \      AND target = COALESCE(",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_ablVs
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_ablVu,
                        Data.String.fromString
                          ", target) \n\
                          \      AND agent = COALESCE(",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_ablVs
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_ablVv,
                        Data.String.fromString
                          ", agent) \n\
                          \      AND COALESCE(party, -1) = COALESCE(",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_ablVs
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_ablVw,
                        Data.String.fromString
                          ", party, -1)\n\
                          \      AND COALESCE(volume, -1) = COALESCE(",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_ablVs
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_ablVx,
                        Data.String.fromString
                          ", volume, -1)\n\
                          \      AND COALESCE(container, -1) = COALESCE(",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_ablVs
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_ablVy,
                        Data.String.fromString
                          ", container, -1)\n\
                          \      AND COALESCE(segment, 'empty') <@ ",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_ablVs
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "segment")
                          _p_ablVz,
                        Data.String.fromString
                          " \n\
                          \      AND COALESCE(asset, -1) = COALESCE(",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_ablVs
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_ablVA,
                        Data.String.fromString
                          ", asset, -1)\n\
                          \      AND COALESCE(comment, -1) = COALESCE(",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_ablVs
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_ablVB,
                        Data.String.fromString
                          ", comment, -1)\n\
                          \      AND COALESCE(tag, -1) = COALESCE(",
                        Database.PostgreSQL.Typed.Types.pgEscapeParameter
                          _tenv_ablVs
                          (Database.PostgreSQL.Typed.Types.PGTypeProxy ::
                             Database.PostgreSQL.Typed.Types.PGTypeName "integer")
                          _p_ablVC,
                        Data.String.fromString
                          ", tag, -1)\n\
                          \    "]))
            (\ _tenv_ablVs [] -> ()))
      notificationNotice
      ((mfilter (no /=)) $ Just $ partyId $ partyRow
       $ accountParty notificationTarget)
      ((mfilter (no /=)) $ Just $ partyId notificationAgent)
      (partyId <$> notificationParty)
      (volumeId <$> notificationVolume)
      notificationContainerId
      (fromMaybe fullSegment notificationSegment)
      notificationAssetId
      notificationCommentId
      (tagId <$> notificationTag)
