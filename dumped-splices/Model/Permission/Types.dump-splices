src/Databrary/Model/Permission/Types.hs:112:1-39: Splicing declarations
    deriveLiftMany [''Permission, ''Access]
  ======>
    instance Language.Haskell.TH.Syntax.Lift Permission where
      Language.Haskell.TH.Syntax.lift
        = \ e_a4Ql0
            -> case e_a4Ql0 of {
                 PermissionNONE
                   -> Language.Haskell.TH.Lib.conE
                        (Language.Haskell.TH.Syntax.Name
                           (Language.Haskell.TH.Syntax.mkOccName "PermissionNONE")
                           (Language.Haskell.TH.Syntax.NameG
                              Language.Haskell.TH.Syntax.DataName
                              (Language.Haskell.TH.Syntax.mkPkgName
                                 "databrary-1-CKdn4uB613l7rh0y53TmMA")
                              (Language.Haskell.TH.Syntax.mkModName
                                 "Databrary.Model.Permission.Types")))
                 PermissionPUBLIC
                   -> Language.Haskell.TH.Lib.conE
                        (Language.Haskell.TH.Syntax.Name
                           (Language.Haskell.TH.Syntax.mkOccName "PermissionPUBLIC")
                           (Language.Haskell.TH.Syntax.NameG
                              Language.Haskell.TH.Syntax.DataName
                              (Language.Haskell.TH.Syntax.mkPkgName
                                 "databrary-1-CKdn4uB613l7rh0y53TmMA")
                              (Language.Haskell.TH.Syntax.mkModName
                                 "Databrary.Model.Permission.Types")))
                 PermissionSHARED
                   -> Language.Haskell.TH.Lib.conE
                        (Language.Haskell.TH.Syntax.Name
                           (Language.Haskell.TH.Syntax.mkOccName "PermissionSHARED")
                           (Language.Haskell.TH.Syntax.NameG
                              Language.Haskell.TH.Syntax.DataName
                              (Language.Haskell.TH.Syntax.mkPkgName
                                 "databrary-1-CKdn4uB613l7rh0y53TmMA")
                              (Language.Haskell.TH.Syntax.mkModName
                                 "Databrary.Model.Permission.Types")))
                 PermissionREAD
                   -> Language.Haskell.TH.Lib.conE
                        (Language.Haskell.TH.Syntax.Name
                           (Language.Haskell.TH.Syntax.mkOccName "PermissionREAD")
                           (Language.Haskell.TH.Syntax.NameG
                              Language.Haskell.TH.Syntax.DataName
                              (Language.Haskell.TH.Syntax.mkPkgName
                                 "databrary-1-CKdn4uB613l7rh0y53TmMA")
                              (Language.Haskell.TH.Syntax.mkModName
                                 "Databrary.Model.Permission.Types")))
                 PermissionEDIT
                   -> Language.Haskell.TH.Lib.conE
                        (Language.Haskell.TH.Syntax.Name
                           (Language.Haskell.TH.Syntax.mkOccName "PermissionEDIT")
                           (Language.Haskell.TH.Syntax.NameG
                              Language.Haskell.TH.Syntax.DataName
                              (Language.Haskell.TH.Syntax.mkPkgName
                                 "databrary-1-CKdn4uB613l7rh0y53TmMA")
                              (Language.Haskell.TH.Syntax.mkModName
                                 "Databrary.Model.Permission.Types")))
                 PermissionADMIN
                   -> Language.Haskell.TH.Lib.conE
                        (Language.Haskell.TH.Syntax.Name
                           (Language.Haskell.TH.Syntax.mkOccName "PermissionADMIN")
                           (Language.Haskell.TH.Syntax.NameG
                              Language.Haskell.TH.Syntax.DataName
                              (Language.Haskell.TH.Syntax.mkPkgName
                                 "databrary-1-CKdn4uB613l7rh0y53TmMA")
                              (Language.Haskell.TH.Syntax.mkModName
                                 "Databrary.Model.Permission.Types"))) }
    instance Language.Haskell.TH.Syntax.Lift Access where
      Language.Haskell.TH.Syntax.lift
        = \ e_a4Ql1
            -> case e_a4Ql1 of {
                 Access x0_a4Ql2 x1_a4Ql3
                   -> Language.Haskell.TH.Lib.appE
                        (Language.Haskell.TH.Lib.appE
                           (Language.Haskell.TH.Lib.conE
                              (Language.Haskell.TH.Syntax.Name
                                 (Language.Haskell.TH.Syntax.mkOccName "Access")
                                 (Language.Haskell.TH.Syntax.NameG
                                    Language.Haskell.TH.Syntax.DataName
                                    (Language.Haskell.TH.Syntax.mkPkgName
                                       "databrary-1-CKdn4uB613l7rh0y53TmMA")
                                    (Language.Haskell.TH.Syntax.mkModName
                                       "Databrary.Model.Permission.Types"))))
                           (Language.Haskell.TH.Syntax.lift x0_a4Ql2))
                        (Language.Haskell.TH.Syntax.lift x1_a4Ql3) }
src/Databrary/Model/Permission/Types.hs:117:1-31: Splicing declarations
    deriveLift ''VolumeAccessPolicy
  ======>
    instance Language.Haskell.TH.Syntax.Lift VolumeAccessPolicy where
      Language.Haskell.TH.Syntax.lift
        = \ e_a4QtI
            -> case e_a4QtI of {
                 PublicRestricted
                   -> Language.Haskell.TH.Lib.conE
                        (Language.Haskell.TH.Syntax.Name
                           (Language.Haskell.TH.Syntax.mkOccName "PublicRestricted")
                           (Language.Haskell.TH.Syntax.NameG
                              Language.Haskell.TH.Syntax.DataName
                              (Language.Haskell.TH.Syntax.mkPkgName
                                 "databrary-1-CKdn4uB613l7rh0y53TmMA")
                              (Language.Haskell.TH.Syntax.mkModName
                                 "Databrary.Model.Permission.Types")))
                 PermLevelDefault
                   -> Language.Haskell.TH.Lib.conE
                        (Language.Haskell.TH.Syntax.Name
                           (Language.Haskell.TH.Syntax.mkOccName "PermLevelDefault")
                           (Language.Haskell.TH.Syntax.NameG
                              Language.Haskell.TH.Syntax.DataName
                              (Language.Haskell.TH.Syntax.mkPkgName
                                 "databrary-1-CKdn4uB613l7rh0y53TmMA")
                              (Language.Haskell.TH.Syntax.mkModName
                                 "Databrary.Model.Permission.Types"))) }
